# coding: utf-8

"""
    PhrameServer

    Phrame API  # noqa: E501

    The version of the OpenAPI document: 1.0.4
    Contact: david@3adesign.co.uk
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import PhrameServer
from PhrameServer.models.config_configuration import ConfigConfiguration  # noqa: E501
from PhrameServer.rest import ApiException

class TestConfigConfiguration(unittest.TestCase):
    """ConfigConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ConfigConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = PhrameServer.models.config_configuration.ConfigConfiguration()  # noqa: E501
        if include_optional :
            return ConfigConfiguration(
                id = '', 
                description = '', 
                target_resolutions = [
                    PhrameServer.models.phrame_ui_resolution.phrame-UI-resolution(
                        id = '', 
                        width = 1, 
                        height = 1, 
                        description = '', )
                    ], 
                components = [
                    PhrameServer.models.phrame_ui_component.phrame-UI-component(
                        id = '', 
                        name = '0', 
                        description = '', 
                        left = 1.337, 
                        top = 1.337, 
                        width = 1.337, 
                        height = 1.337, 
                        type = '0', 
                        z_order = 0, 
                        stream_id = '', 
                        stream_suffix = '', 
                        button_properties = PhrameServer.models.phrame_ui_buttons.phrame-UI-buttons(
                            id = '', 
                            rows = 56, 
                            columns = 1.337, 
                            labels = [
                                ''
                                ], ), )
                    ], 
                designers = [
                    ''
                    ], 
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                modified_date = [
                    datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                    ]
            )
        else :
            return ConfigConfiguration(
        )

    def testConfigConfiguration(self):
        """Test ConfigConfiguration"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
