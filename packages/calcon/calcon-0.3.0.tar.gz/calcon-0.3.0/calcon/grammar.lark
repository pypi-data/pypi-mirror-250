
UINT: /\d(_?\d)*/
UNSIGNED.2: (UINT ("." UINT?)? | "." UINT) (/[eE][-+]?/ UINT)?
IDENT: /([^0-9\W]|\u00B0)+/
// \u00B0 : degree symbol
_NEWLINE: NEWLINE

?stmtseq: _NEWLINE* (stmt (_NEWLINE+ stmt)*)? _NEWLINE*  -> statement_sequence
?stmt: defrsa
    | defdsa
    | defpsa
?defrsa: "1" IDENT ["(" IDENT ")"] ("[" IDENT ("," IDENT)* "]")? "::" IDENT -> define_root_symbol_aliases
?defdsa: "1" IDENT ["(" IDENT ")"] ("[" IDENT ("," IDENT)* "]")? "=" expr -> define_derived_symbol_aliases
?defpsa: IDENT "-" ["(" IDENT "-" ")"] ("[" IDENT "-" ("," IDENT "-")* "]")? "=" expr -> define_prefix_symbol_aliases

?expr: conv
?conv: sum
    | conv "->" sum        -> convert
?sum: prod
    | sum "+" prod         -> add
    | sum "-" prod         -> subtract
?prod: adj
    | prod "*" adj         -> multiply
    | prod "/" adj         -> divide
?adj: sig
    | adj pow              -> multiply
?sig: pow
    | "+" sig              -> positive
    | "-" sig              -> negate
?pow: atom
    | atom ("**"|"^") sig  -> exponentiate
?atom: UNSIGNED            -> unsigned
    | IDENT                -> ident
    | "(" expr ")"

%import common.WS_INLINE
%import common.NEWLINE
%import python.COMMENT

%ignore COMMENT
%ignore WS_INLINE
