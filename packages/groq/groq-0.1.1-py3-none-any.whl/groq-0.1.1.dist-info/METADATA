Metadata-Version: 2.1
Name: groq
Version: 0.1.1
Summary: The GroqAPI Python SDK
Author: Rohit Khaire
Author-email: rkhaire@groq.com
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: google-api-python-client (>=2.111.0,<3.0.0)
Requires-Dist: google-cloud (>=0.34.0,<0.35.0)
Requires-Dist: grpc-stubs (>=1.53.0.5,<2.0.0.0)
Requires-Dist: grpcio (>=1.60.0,<2.0.0)
Requires-Dist: openai (>=1.6.1,<2.0.0)
Requires-Dist: protobuf (==3.20.3)
Requires-Dist: types-protobuf (>=4.24.0.4,<5.0.0.0)
Requires-Dist: types-requests (>=2.31.0.20231231,<3.0.0.0)
Description-Content-Type: text/markdown

# GroqAPI Python SDK

[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
![coverage](https://git.groq.io/cloud/groqapi-py/badges/%{default_branch}/coverage.svg)

## Devlopment

### Setup
first install `poetry` via `pipx`:
```bash
sudo apt install pipx

pipx install poetry
```
Then install the project:
```bash
poetry install
```
### Testing
Make sure to export an appropriate key for the end-to-end tests:
```bash
export GROQ_SECRET_ACCESS_KEY="<key>"
```
To run the tests in `/tests`, run
```bash
poetry run pytest
```
To generate a coverage report as well, run
```bash
poetry run pytest --cov=groq
```

### Linting & Formatting

To black everything, run
```bash
poetry run black .
```
To lint with prospector, run
```bash
poetry run prospector
```

### Building
To build .whl files and such, run 
```bash
poetry build
```

### Publishing
> Note, not tested or implemented yet, I need to add the keys and show for test repo as well
```bash
poetry publish
```

## Run Examples
To run the example code, you can use `poetry run python` like so:
```bash
poetry run python examples/examples.py
```

