#!/usr/bin/env python
from hagelslag.processing.ObjectMatcher import shifted_centroid_distance, \
    duration_distance, mean_min_time_distance, mean_minimum_centroid_distance
import pandas as pd
import numpy as np

scratch_path = "/glade/scratch/dgagne/"
date_index = pd.DatetimeIndex(start="2013-05-15-00T00:00", end="2013-06-06T00:00", freq="1D")
ensemble_members = ["mem{0:d}".format(m) for m in range(1, 31)]
config = dict(dates=date_index.to_pydatetime(),
              start_hour=12,
              end_hour=36,
              watershed_variable="UP_HELI_MAX",
              ensemble_name="NCAR",
	          ensemble_members=ensemble_members,
              model_path="/glade/scratch/sobash/RT2013/",
              model_watershed_params=(20, 1, 150, 100, 100),
              size_filter=10,
              gaussian_window=2,
              mrms_path="/glade/scratch/dgagne/mrms_ncar/",
              mrms_variable="MESH_Max_60min_00.50",
              mrms_watershed_params=(6, 1, 100, 100, 70),
              object_matcher_params=([shifted_centroid_distance], np.array([1.0]),
                                     np.array([30000])),
              track_matcher_params=([mean_minimum_centroid_distance, mean_min_time_distance, duration_distance],np.array([0.5, 0.2, 0.3]),
                                    np.array([1000000, 6, 6])),
              storm_variables=["UP_HELI_MAX", "GRPL_MAX", "REFL_10CM_max", "W_UP_MAX", "W_DN_MAX", "WSPD10MAX",
                               "UP_HELI_MIN"],
              potential_variables=[],
              variable_statistics=["mean", "max", "min", "std", "mean_dt", "max_dt"],
              csv_path= scratch_path + "track_data_ncar_2013_csv/",
              geojson_path=scratch_path + "track_data_ncar_2013_json/",
              train=True,
              single_step=False,
              model_map_file="/glade/u/home/dgagne/hagelslag/mapfiles/ncar_ensemble_map_2013.txt"
              )
