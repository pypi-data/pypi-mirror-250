# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeCropImagePython
else:
    import _tubeCropImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeCropImagePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeCropImagePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython

def tubeCropImageDD2_New():
    return tubeCropImageDD2.New()

class tubeCropImageDD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageDD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageDD2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDD2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageDD2

        Create a new object of the class tubeCropImageDD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageDD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageDD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageDD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageDD2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageDD2_swigregister(tubeCropImageDD2)
tubeCropImageDD2___New_orig__ = _tubeCropImagePython.tubeCropImageDD2___New_orig__
tubeCropImageDD2_cast = _tubeCropImagePython.tubeCropImageDD2_cast


def tubeCropImageDD3_New():
    return tubeCropImageDD3.New()

class tubeCropImageDD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageDD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDD3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageDD3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDD3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageDD3

        Create a new object of the class tubeCropImageDD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageDD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageDD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageDD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageDD3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageDD3_swigregister(tubeCropImageDD3)
tubeCropImageDD3___New_orig__ = _tubeCropImagePython.tubeCropImageDD3___New_orig__
tubeCropImageDD3_cast = _tubeCropImagePython.tubeCropImageDD3_cast


def tubeCropImageDF2_New():
    return tubeCropImageDF2.New()

class tubeCropImageDF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageDF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageDF2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDF2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageDF2

        Create a new object of the class tubeCropImageDF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageDF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageDF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageDF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageDF2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageDF2_swigregister(tubeCropImageDF2)
tubeCropImageDF2___New_orig__ = _tubeCropImagePython.tubeCropImageDF2___New_orig__
tubeCropImageDF2_cast = _tubeCropImagePython.tubeCropImageDF2_cast


def tubeCropImageDF3_New():
    return tubeCropImageDF3.New()

class tubeCropImageDF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageDF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDF3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageDF3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDF3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageDF3

        Create a new object of the class tubeCropImageDF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageDF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageDF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageDF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageDF3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageDF3_swigregister(tubeCropImageDF3)
tubeCropImageDF3___New_orig__ = _tubeCropImagePython.tubeCropImageDF3___New_orig__
tubeCropImageDF3_cast = _tubeCropImagePython.tubeCropImageDF3_cast


def tubeCropImageDSS2_New():
    return tubeCropImageDSS2.New()

class tubeCropImageDSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageDSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageDSS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageDSS2

        Create a new object of the class tubeCropImageDSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageDSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageDSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageDSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageDSS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageDSS2_swigregister(tubeCropImageDSS2)
tubeCropImageDSS2___New_orig__ = _tubeCropImagePython.tubeCropImageDSS2___New_orig__
tubeCropImageDSS2_cast = _tubeCropImagePython.tubeCropImageDSS2_cast


def tubeCropImageDSS3_New():
    return tubeCropImageDSS3.New()

class tubeCropImageDSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageDSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDSS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageDSS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageDSS3

        Create a new object of the class tubeCropImageDSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageDSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageDSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageDSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageDSS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageDSS3_swigregister(tubeCropImageDSS3)
tubeCropImageDSS3___New_orig__ = _tubeCropImagePython.tubeCropImageDSS3___New_orig__
tubeCropImageDSS3_cast = _tubeCropImagePython.tubeCropImageDSS3_cast


def tubeCropImageDUC2_New():
    return tubeCropImageDUC2.New()

class tubeCropImageDUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageDUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageDUC2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageDUC2

        Create a new object of the class tubeCropImageDUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageDUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageDUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageDUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageDUC2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageDUC2_swigregister(tubeCropImageDUC2)
tubeCropImageDUC2___New_orig__ = _tubeCropImagePython.tubeCropImageDUC2___New_orig__
tubeCropImageDUC2_cast = _tubeCropImagePython.tubeCropImageDUC2_cast


def tubeCropImageDUC3_New():
    return tubeCropImageDUC3.New()

class tubeCropImageDUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageDUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUC3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageDUC3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageDUC3

        Create a new object of the class tubeCropImageDUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageDUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageDUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageDUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageDUC3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageDUC3_swigregister(tubeCropImageDUC3)
tubeCropImageDUC3___New_orig__ = _tubeCropImagePython.tubeCropImageDUC3___New_orig__
tubeCropImageDUC3_cast = _tubeCropImagePython.tubeCropImageDUC3_cast


def tubeCropImageDUS2_New():
    return tubeCropImageDUS2.New()

class tubeCropImageDUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageDUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageDUS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageDUS2

        Create a new object of the class tubeCropImageDUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageDUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageDUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageDUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageDUS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageDUS2_swigregister(tubeCropImageDUS2)
tubeCropImageDUS2___New_orig__ = _tubeCropImagePython.tubeCropImageDUS2___New_orig__
tubeCropImageDUS2_cast = _tubeCropImagePython.tubeCropImageDUS2_cast


def tubeCropImageDUS3_New():
    return tubeCropImageDUS3.New()

class tubeCropImageDUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageDUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageDUS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageDUS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageDUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageDUS3

        Create a new object of the class tubeCropImageDUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageDUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageDUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageDUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageDUS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageDUS3_swigregister(tubeCropImageDUS3)
tubeCropImageDUS3___New_orig__ = _tubeCropImagePython.tubeCropImageDUS3___New_orig__
tubeCropImageDUS3_cast = _tubeCropImagePython.tubeCropImageDUS3_cast


def tubeCropImageFD2_New():
    return tubeCropImageFD2.New()

class tubeCropImageFD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageFD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageFD2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFD2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageFD2

        Create a new object of the class tubeCropImageFD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageFD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageFD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageFD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageFD2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageFD2_swigregister(tubeCropImageFD2)
tubeCropImageFD2___New_orig__ = _tubeCropImagePython.tubeCropImageFD2___New_orig__
tubeCropImageFD2_cast = _tubeCropImagePython.tubeCropImageFD2_cast


def tubeCropImageFD3_New():
    return tubeCropImageFD3.New()

class tubeCropImageFD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageFD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFD3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageFD3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFD3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageFD3

        Create a new object of the class tubeCropImageFD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageFD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageFD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageFD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageFD3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageFD3_swigregister(tubeCropImageFD3)
tubeCropImageFD3___New_orig__ = _tubeCropImagePython.tubeCropImageFD3___New_orig__
tubeCropImageFD3_cast = _tubeCropImagePython.tubeCropImageFD3_cast


def tubeCropImageFF2_New():
    return tubeCropImageFF2.New()

class tubeCropImageFF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageFF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageFF2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFF2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageFF2

        Create a new object of the class tubeCropImageFF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageFF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageFF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageFF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageFF2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageFF2_swigregister(tubeCropImageFF2)
tubeCropImageFF2___New_orig__ = _tubeCropImagePython.tubeCropImageFF2___New_orig__
tubeCropImageFF2_cast = _tubeCropImagePython.tubeCropImageFF2_cast


def tubeCropImageFF3_New():
    return tubeCropImageFF3.New()

class tubeCropImageFF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageFF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFF3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageFF3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFF3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageFF3

        Create a new object of the class tubeCropImageFF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageFF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageFF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageFF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageFF3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageFF3_swigregister(tubeCropImageFF3)
tubeCropImageFF3___New_orig__ = _tubeCropImagePython.tubeCropImageFF3___New_orig__
tubeCropImageFF3_cast = _tubeCropImagePython.tubeCropImageFF3_cast


def tubeCropImageFSS2_New():
    return tubeCropImageFSS2.New()

class tubeCropImageFSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageFSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageFSS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageFSS2

        Create a new object of the class tubeCropImageFSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageFSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageFSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageFSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageFSS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageFSS2_swigregister(tubeCropImageFSS2)
tubeCropImageFSS2___New_orig__ = _tubeCropImagePython.tubeCropImageFSS2___New_orig__
tubeCropImageFSS2_cast = _tubeCropImagePython.tubeCropImageFSS2_cast


def tubeCropImageFSS3_New():
    return tubeCropImageFSS3.New()

class tubeCropImageFSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageFSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFSS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageFSS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageFSS3

        Create a new object of the class tubeCropImageFSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageFSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageFSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageFSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageFSS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageFSS3_swigregister(tubeCropImageFSS3)
tubeCropImageFSS3___New_orig__ = _tubeCropImagePython.tubeCropImageFSS3___New_orig__
tubeCropImageFSS3_cast = _tubeCropImagePython.tubeCropImageFSS3_cast


def tubeCropImageFUC2_New():
    return tubeCropImageFUC2.New()

class tubeCropImageFUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageFUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageFUC2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageFUC2

        Create a new object of the class tubeCropImageFUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageFUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageFUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageFUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageFUC2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageFUC2_swigregister(tubeCropImageFUC2)
tubeCropImageFUC2___New_orig__ = _tubeCropImagePython.tubeCropImageFUC2___New_orig__
tubeCropImageFUC2_cast = _tubeCropImagePython.tubeCropImageFUC2_cast


def tubeCropImageFUC3_New():
    return tubeCropImageFUC3.New()

class tubeCropImageFUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageFUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUC3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageFUC3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageFUC3

        Create a new object of the class tubeCropImageFUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageFUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageFUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageFUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageFUC3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageFUC3_swigregister(tubeCropImageFUC3)
tubeCropImageFUC3___New_orig__ = _tubeCropImagePython.tubeCropImageFUC3___New_orig__
tubeCropImageFUC3_cast = _tubeCropImagePython.tubeCropImageFUC3_cast


def tubeCropImageFUS2_New():
    return tubeCropImageFUS2.New()

class tubeCropImageFUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageFUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageFUS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageFUS2

        Create a new object of the class tubeCropImageFUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageFUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageFUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageFUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageFUS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageFUS2_swigregister(tubeCropImageFUS2)
tubeCropImageFUS2___New_orig__ = _tubeCropImagePython.tubeCropImageFUS2___New_orig__
tubeCropImageFUS2_cast = _tubeCropImagePython.tubeCropImageFUS2_cast


def tubeCropImageFUS3_New():
    return tubeCropImageFUS3.New()

class tubeCropImageFUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageFUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageFUS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageFUS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageFUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageFUS3

        Create a new object of the class tubeCropImageFUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageFUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageFUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageFUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageFUS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageFUS3_swigregister(tubeCropImageFUS3)
tubeCropImageFUS3___New_orig__ = _tubeCropImagePython.tubeCropImageFUS3___New_orig__
tubeCropImageFUS3_cast = _tubeCropImagePython.tubeCropImageFUS3_cast


def tubeCropImageSSD2_New():
    return tubeCropImageSSD2.New()

class tubeCropImageSSD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageSSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageSSD2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSD2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageSSD2

        Create a new object of the class tubeCropImageSSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageSSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageSSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageSSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageSSD2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageSSD2_swigregister(tubeCropImageSSD2)
tubeCropImageSSD2___New_orig__ = _tubeCropImagePython.tubeCropImageSSD2___New_orig__
tubeCropImageSSD2_cast = _tubeCropImagePython.tubeCropImageSSD2_cast


def tubeCropImageSSD3_New():
    return tubeCropImageSSD3.New()

class tubeCropImageSSD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageSSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSD3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageSSD3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSD3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageSSD3

        Create a new object of the class tubeCropImageSSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageSSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageSSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageSSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageSSD3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageSSD3_swigregister(tubeCropImageSSD3)
tubeCropImageSSD3___New_orig__ = _tubeCropImagePython.tubeCropImageSSD3___New_orig__
tubeCropImageSSD3_cast = _tubeCropImagePython.tubeCropImageSSD3_cast


def tubeCropImageSSF2_New():
    return tubeCropImageSSF2.New()

class tubeCropImageSSF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageSSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageSSF2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSF2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageSSF2

        Create a new object of the class tubeCropImageSSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageSSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageSSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageSSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageSSF2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageSSF2_swigregister(tubeCropImageSSF2)
tubeCropImageSSF2___New_orig__ = _tubeCropImagePython.tubeCropImageSSF2___New_orig__
tubeCropImageSSF2_cast = _tubeCropImagePython.tubeCropImageSSF2_cast


def tubeCropImageSSF3_New():
    return tubeCropImageSSF3.New()

class tubeCropImageSSF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageSSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSF3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageSSF3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSF3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageSSF3

        Create a new object of the class tubeCropImageSSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageSSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageSSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageSSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageSSF3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageSSF3_swigregister(tubeCropImageSSF3)
tubeCropImageSSF3___New_orig__ = _tubeCropImagePython.tubeCropImageSSF3___New_orig__
tubeCropImageSSF3_cast = _tubeCropImagePython.tubeCropImageSSF3_cast


def tubeCropImageSSSS2_New():
    return tubeCropImageSSSS2.New()

class tubeCropImageSSSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageSSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageSSSS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageSSSS2

        Create a new object of the class tubeCropImageSSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageSSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageSSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageSSSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageSSSS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageSSSS2_swigregister(tubeCropImageSSSS2)
tubeCropImageSSSS2___New_orig__ = _tubeCropImagePython.tubeCropImageSSSS2___New_orig__
tubeCropImageSSSS2_cast = _tubeCropImagePython.tubeCropImageSSSS2_cast


def tubeCropImageSSSS3_New():
    return tubeCropImageSSSS3.New()

class tubeCropImageSSSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageSSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSSS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageSSSS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageSSSS3

        Create a new object of the class tubeCropImageSSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageSSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageSSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageSSSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageSSSS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageSSSS3_swigregister(tubeCropImageSSSS3)
tubeCropImageSSSS3___New_orig__ = _tubeCropImagePython.tubeCropImageSSSS3___New_orig__
tubeCropImageSSSS3_cast = _tubeCropImagePython.tubeCropImageSSSS3_cast


def tubeCropImageSSUC2_New():
    return tubeCropImageSSUC2.New()

class tubeCropImageSSUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageSSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageSSUC2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageSSUC2

        Create a new object of the class tubeCropImageSSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageSSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageSSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageSSUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageSSUC2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageSSUC2_swigregister(tubeCropImageSSUC2)
tubeCropImageSSUC2___New_orig__ = _tubeCropImagePython.tubeCropImageSSUC2___New_orig__
tubeCropImageSSUC2_cast = _tubeCropImagePython.tubeCropImageSSUC2_cast


def tubeCropImageSSUC3_New():
    return tubeCropImageSSUC3.New()

class tubeCropImageSSUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageSSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUC3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageSSUC3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageSSUC3

        Create a new object of the class tubeCropImageSSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageSSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageSSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageSSUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageSSUC3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageSSUC3_swigregister(tubeCropImageSSUC3)
tubeCropImageSSUC3___New_orig__ = _tubeCropImagePython.tubeCropImageSSUC3___New_orig__
tubeCropImageSSUC3_cast = _tubeCropImagePython.tubeCropImageSSUC3_cast


def tubeCropImageSSUS2_New():
    return tubeCropImageSSUS2.New()

class tubeCropImageSSUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageSSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageSSUS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageSSUS2

        Create a new object of the class tubeCropImageSSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageSSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageSSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageSSUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageSSUS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageSSUS2_swigregister(tubeCropImageSSUS2)
tubeCropImageSSUS2___New_orig__ = _tubeCropImagePython.tubeCropImageSSUS2___New_orig__
tubeCropImageSSUS2_cast = _tubeCropImagePython.tubeCropImageSSUS2_cast


def tubeCropImageSSUS3_New():
    return tubeCropImageSSUS3.New()

class tubeCropImageSSUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageSSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageSSUS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageSSUS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageSSUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageSSUS3

        Create a new object of the class tubeCropImageSSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageSSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageSSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageSSUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageSSUS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageSSUS3_swigregister(tubeCropImageSSUS3)
tubeCropImageSSUS3___New_orig__ = _tubeCropImagePython.tubeCropImageSSUS3___New_orig__
tubeCropImageSSUS3_cast = _tubeCropImagePython.tubeCropImageSSUS3_cast


def tubeCropImageUCD2_New():
    return tubeCropImageUCD2.New()

class tubeCropImageUCD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUCD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUCD2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCD2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUCD2

        Create a new object of the class tubeCropImageUCD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUCD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUCD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUCD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUCD2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUCD2_swigregister(tubeCropImageUCD2)
tubeCropImageUCD2___New_orig__ = _tubeCropImagePython.tubeCropImageUCD2___New_orig__
tubeCropImageUCD2_cast = _tubeCropImagePython.tubeCropImageUCD2_cast


def tubeCropImageUCD3_New():
    return tubeCropImageUCD3.New()

class tubeCropImageUCD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUCD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCD3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUCD3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCD3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUCD3

        Create a new object of the class tubeCropImageUCD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUCD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUCD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUCD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUCD3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUCD3_swigregister(tubeCropImageUCD3)
tubeCropImageUCD3___New_orig__ = _tubeCropImagePython.tubeCropImageUCD3___New_orig__
tubeCropImageUCD3_cast = _tubeCropImagePython.tubeCropImageUCD3_cast


def tubeCropImageUCF2_New():
    return tubeCropImageUCF2.New()

class tubeCropImageUCF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUCF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUCF2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCF2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUCF2

        Create a new object of the class tubeCropImageUCF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUCF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUCF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUCF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUCF2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUCF2_swigregister(tubeCropImageUCF2)
tubeCropImageUCF2___New_orig__ = _tubeCropImagePython.tubeCropImageUCF2___New_orig__
tubeCropImageUCF2_cast = _tubeCropImagePython.tubeCropImageUCF2_cast


def tubeCropImageUCF3_New():
    return tubeCropImageUCF3.New()

class tubeCropImageUCF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUCF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCF3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUCF3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCF3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUCF3

        Create a new object of the class tubeCropImageUCF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUCF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUCF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUCF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUCF3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUCF3_swigregister(tubeCropImageUCF3)
tubeCropImageUCF3___New_orig__ = _tubeCropImagePython.tubeCropImageUCF3___New_orig__
tubeCropImageUCF3_cast = _tubeCropImagePython.tubeCropImageUCF3_cast


def tubeCropImageUCSS2_New():
    return tubeCropImageUCSS2.New()

class tubeCropImageUCSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUCSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUCSS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUCSS2

        Create a new object of the class tubeCropImageUCSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUCSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUCSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUCSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUCSS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUCSS2_swigregister(tubeCropImageUCSS2)
tubeCropImageUCSS2___New_orig__ = _tubeCropImagePython.tubeCropImageUCSS2___New_orig__
tubeCropImageUCSS2_cast = _tubeCropImagePython.tubeCropImageUCSS2_cast


def tubeCropImageUCSS3_New():
    return tubeCropImageUCSS3.New()

class tubeCropImageUCSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUCSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCSS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUCSS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUCSS3

        Create a new object of the class tubeCropImageUCSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUCSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUCSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUCSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUCSS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUCSS3_swigregister(tubeCropImageUCSS3)
tubeCropImageUCSS3___New_orig__ = _tubeCropImagePython.tubeCropImageUCSS3___New_orig__
tubeCropImageUCSS3_cast = _tubeCropImagePython.tubeCropImageUCSS3_cast


def tubeCropImageUCUC2_New():
    return tubeCropImageUCUC2.New()

class tubeCropImageUCUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUCUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUCUC2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUCUC2

        Create a new object of the class tubeCropImageUCUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUCUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUCUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUCUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUCUC2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUCUC2_swigregister(tubeCropImageUCUC2)
tubeCropImageUCUC2___New_orig__ = _tubeCropImagePython.tubeCropImageUCUC2___New_orig__
tubeCropImageUCUC2_cast = _tubeCropImagePython.tubeCropImageUCUC2_cast


def tubeCropImageUCUC3_New():
    return tubeCropImageUCUC3.New()

class tubeCropImageUCUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUCUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUC3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUCUC3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUCUC3

        Create a new object of the class tubeCropImageUCUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUCUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUCUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUCUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUCUC3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUCUC3_swigregister(tubeCropImageUCUC3)
tubeCropImageUCUC3___New_orig__ = _tubeCropImagePython.tubeCropImageUCUC3___New_orig__
tubeCropImageUCUC3_cast = _tubeCropImagePython.tubeCropImageUCUC3_cast


def tubeCropImageUCUS2_New():
    return tubeCropImageUCUS2.New()

class tubeCropImageUCUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUCUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUCUS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUCUS2

        Create a new object of the class tubeCropImageUCUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUCUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUCUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUCUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUCUS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUCUS2_swigregister(tubeCropImageUCUS2)
tubeCropImageUCUS2___New_orig__ = _tubeCropImagePython.tubeCropImageUCUS2___New_orig__
tubeCropImageUCUS2_cast = _tubeCropImagePython.tubeCropImageUCUS2_cast


def tubeCropImageUCUS3_New():
    return tubeCropImageUCUS3.New()

class tubeCropImageUCUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUCUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUCUS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUCUS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUCUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUCUS3

        Create a new object of the class tubeCropImageUCUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUCUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUCUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUCUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUCUS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUCUS3_swigregister(tubeCropImageUCUS3)
tubeCropImageUCUS3___New_orig__ = _tubeCropImagePython.tubeCropImageUCUS3___New_orig__
tubeCropImageUCUS3_cast = _tubeCropImagePython.tubeCropImageUCUS3_cast


def tubeCropImageUSD2_New():
    return tubeCropImageUSD2.New()

class tubeCropImageUSD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUSD2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSD2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUSD2

        Create a new object of the class tubeCropImageUSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUSD2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUSD2_swigregister(tubeCropImageUSD2)
tubeCropImageUSD2___New_orig__ = _tubeCropImagePython.tubeCropImageUSD2___New_orig__
tubeCropImageUSD2_cast = _tubeCropImagePython.tubeCropImageUSD2_cast


def tubeCropImageUSD3_New():
    return tubeCropImageUSD3.New()

class tubeCropImageUSD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSD3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUSD3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSD3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUSD3

        Create a new object of the class tubeCropImageUSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUSD3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUSD3_swigregister(tubeCropImageUSD3)
tubeCropImageUSD3___New_orig__ = _tubeCropImagePython.tubeCropImageUSD3___New_orig__
tubeCropImageUSD3_cast = _tubeCropImagePython.tubeCropImageUSD3_cast


def tubeCropImageUSF2_New():
    return tubeCropImageUSF2.New()

class tubeCropImageUSF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUSF2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSF2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUSF2

        Create a new object of the class tubeCropImageUSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUSF2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUSF2_swigregister(tubeCropImageUSF2)
tubeCropImageUSF2___New_orig__ = _tubeCropImagePython.tubeCropImageUSF2___New_orig__
tubeCropImageUSF2_cast = _tubeCropImagePython.tubeCropImageUSF2_cast


def tubeCropImageUSF3_New():
    return tubeCropImageUSF3.New()

class tubeCropImageUSF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSF3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUSF3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSF3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUSF3

        Create a new object of the class tubeCropImageUSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUSF3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUSF3_swigregister(tubeCropImageUSF3)
tubeCropImageUSF3___New_orig__ = _tubeCropImagePython.tubeCropImageUSF3___New_orig__
tubeCropImageUSF3_cast = _tubeCropImagePython.tubeCropImageUSF3_cast


def tubeCropImageUSSS2_New():
    return tubeCropImageUSSS2.New()

class tubeCropImageUSSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUSSS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUSSS2

        Create a new object of the class tubeCropImageUSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUSSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUSSS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUSSS2_swigregister(tubeCropImageUSSS2)
tubeCropImageUSSS2___New_orig__ = _tubeCropImagePython.tubeCropImageUSSS2___New_orig__
tubeCropImageUSSS2_cast = _tubeCropImagePython.tubeCropImageUSSS2_cast


def tubeCropImageUSSS3_New():
    return tubeCropImageUSSS3.New()

class tubeCropImageUSSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSSS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUSSS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUSSS3

        Create a new object of the class tubeCropImageUSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUSSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUSSS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUSSS3_swigregister(tubeCropImageUSSS3)
tubeCropImageUSSS3___New_orig__ = _tubeCropImagePython.tubeCropImageUSSS3___New_orig__
tubeCropImageUSSS3_cast = _tubeCropImagePython.tubeCropImageUSSS3_cast


def tubeCropImageUSUC2_New():
    return tubeCropImageUSUC2.New()

class tubeCropImageUSUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUSUC2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUSUC2

        Create a new object of the class tubeCropImageUSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUSUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUSUC2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUSUC2_swigregister(tubeCropImageUSUC2)
tubeCropImageUSUC2___New_orig__ = _tubeCropImagePython.tubeCropImageUSUC2___New_orig__
tubeCropImageUSUC2_cast = _tubeCropImagePython.tubeCropImageUSUC2_cast


def tubeCropImageUSUC3_New():
    return tubeCropImageUSUC3.New()

class tubeCropImageUSUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUC3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUSUC3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUSUC3

        Create a new object of the class tubeCropImageUSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUSUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUSUC3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUSUC3_swigregister(tubeCropImageUSUC3)
tubeCropImageUSUC3___New_orig__ = _tubeCropImagePython.tubeCropImageUSUC3___New_orig__
tubeCropImageUSUC3_cast = _tubeCropImagePython.tubeCropImageUSUC3_cast


def tubeCropImageUSUS2_New():
    return tubeCropImageUSUS2.New()

class tubeCropImageUSUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUSUS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUSUS2

        Create a new object of the class tubeCropImageUSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUSUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUSUS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUSUS2_swigregister(tubeCropImageUSUS2)
tubeCropImageUSUS2___New_orig__ = _tubeCropImagePython.tubeCropImageUSUS2___New_orig__
tubeCropImageUSUS2_cast = _tubeCropImagePython.tubeCropImageUSUS2_cast


def tubeCropImageUSUS3_New():
    return tubeCropImageUSUS3.New()

class tubeCropImageUSUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageUSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageUSUS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageUSUS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageUSUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageUSUS3

        Create a new object of the class tubeCropImageUSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageUSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageUSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageUSUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageUSUS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageUSUS3_swigregister(tubeCropImageUSUS3)
tubeCropImageUSUS3___New_orig__ = _tubeCropImagePython.tubeCropImageUSUS3___New_orig__
tubeCropImageUSUS3_cast = _tubeCropImagePython.tubeCropImageUSUS3_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def crop_image(*args,  min: Sequence[int]=..., max: Sequence[int]=..., size: Sequence[int]=..., center: Sequence[int]=..., boundary: Sequence[int]=..., match_volume: itkt.Image=..., match_mask: itkt.Image=..., split_input: Sequence[int]=...,**kwargs):
    """Functional interface for CropImage"""
    import itk

    kwarg_typehints = { 'min':min,'max':max,'size':size,'center':center,'boundary':boundary,'match_volume':match_volume,'match_mask':match_mask,'split_input':split_input }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.CropImage.New(*args, **kwargs)

    return instance.__internal_call__()

def crop_image_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TubeTK.CropImage
    crop_image.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    crop_image.__doc__ = filter_object.__doc__




