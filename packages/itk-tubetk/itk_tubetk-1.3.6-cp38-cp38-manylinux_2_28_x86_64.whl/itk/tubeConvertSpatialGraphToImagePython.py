# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeConvertSpatialGraphToImagePython
else:
    import _tubeConvertSpatialGraphToImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeConvertSpatialGraphToImagePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeConvertSpatialGraphToImagePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython

def tubeConvertSpatialGraphToImageID2ID2_New():
    return tubeConvertSpatialGraphToImageID2ID2.New()

class tubeConvertSpatialGraphToImageID2ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageID2ID2
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageID2ID2

        Create a new object of the class tubeConvertSpatialGraphToImageID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageID2ID2 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_swigregister(tubeConvertSpatialGraphToImageID2ID2)
tubeConvertSpatialGraphToImageID2ID2___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2___New_orig__
tubeConvertSpatialGraphToImageID2ID2_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID2ID2_cast


def tubeConvertSpatialGraphToImageID3ID3_New():
    return tubeConvertSpatialGraphToImageID3ID3.New()

class tubeConvertSpatialGraphToImageID3ID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageID3ID3
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageID3ID3

        Create a new object of the class tubeConvertSpatialGraphToImageID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageID3ID3 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_swigregister(tubeConvertSpatialGraphToImageID3ID3)
tubeConvertSpatialGraphToImageID3ID3___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3___New_orig__
tubeConvertSpatialGraphToImageID3ID3_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID3ID3_cast


def tubeConvertSpatialGraphToImageID4ID4_New():
    return tubeConvertSpatialGraphToImageID4ID4.New()

class tubeConvertSpatialGraphToImageID4ID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageID4ID4
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageID4ID4

        Create a new object of the class tubeConvertSpatialGraphToImageID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageID4ID4 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_swigregister(tubeConvertSpatialGraphToImageID4ID4)
tubeConvertSpatialGraphToImageID4ID4___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4___New_orig__
tubeConvertSpatialGraphToImageID4ID4_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageID4ID4_cast


def tubeConvertSpatialGraphToImageIF2IF2_New():
    return tubeConvertSpatialGraphToImageIF2IF2.New()

class tubeConvertSpatialGraphToImageIF2IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageIF2IF2
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageIF2IF2

        Create a new object of the class tubeConvertSpatialGraphToImageIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageIF2IF2 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_swigregister(tubeConvertSpatialGraphToImageIF2IF2)
tubeConvertSpatialGraphToImageIF2IF2___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2___New_orig__
tubeConvertSpatialGraphToImageIF2IF2_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF2IF2_cast


def tubeConvertSpatialGraphToImageIF3IF3_New():
    return tubeConvertSpatialGraphToImageIF3IF3.New()

class tubeConvertSpatialGraphToImageIF3IF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageIF3IF3
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageIF3IF3

        Create a new object of the class tubeConvertSpatialGraphToImageIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageIF3IF3 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_swigregister(tubeConvertSpatialGraphToImageIF3IF3)
tubeConvertSpatialGraphToImageIF3IF3___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3___New_orig__
tubeConvertSpatialGraphToImageIF3IF3_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF3IF3_cast


def tubeConvertSpatialGraphToImageIF4IF4_New():
    return tubeConvertSpatialGraphToImageIF4IF4.New()

class tubeConvertSpatialGraphToImageIF4IF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageIF4IF4
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageIF4IF4

        Create a new object of the class tubeConvertSpatialGraphToImageIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageIF4IF4 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_swigregister(tubeConvertSpatialGraphToImageIF4IF4)
tubeConvertSpatialGraphToImageIF4IF4___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4___New_orig__
tubeConvertSpatialGraphToImageIF4IF4_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIF4IF4_cast


def tubeConvertSpatialGraphToImageISS2ISS2_New():
    return tubeConvertSpatialGraphToImageISS2ISS2.New()

class tubeConvertSpatialGraphToImageISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageISS2ISS2
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageISS2ISS2

        Create a new object of the class tubeConvertSpatialGraphToImageISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageISS2ISS2 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_swigregister(tubeConvertSpatialGraphToImageISS2ISS2)
tubeConvertSpatialGraphToImageISS2ISS2___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2___New_orig__
tubeConvertSpatialGraphToImageISS2ISS2_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS2ISS2_cast


def tubeConvertSpatialGraphToImageISS3ISS3_New():
    return tubeConvertSpatialGraphToImageISS3ISS3.New()

class tubeConvertSpatialGraphToImageISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageISS3ISS3
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageISS3ISS3

        Create a new object of the class tubeConvertSpatialGraphToImageISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageISS3ISS3 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_swigregister(tubeConvertSpatialGraphToImageISS3ISS3)
tubeConvertSpatialGraphToImageISS3ISS3___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3___New_orig__
tubeConvertSpatialGraphToImageISS3ISS3_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS3ISS3_cast


def tubeConvertSpatialGraphToImageISS4ISS4_New():
    return tubeConvertSpatialGraphToImageISS4ISS4.New()

class tubeConvertSpatialGraphToImageISS4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageISS4ISS4
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageISS4ISS4

        Create a new object of the class tubeConvertSpatialGraphToImageISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageISS4ISS4 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_swigregister(tubeConvertSpatialGraphToImageISS4ISS4)
tubeConvertSpatialGraphToImageISS4ISS4___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4___New_orig__
tubeConvertSpatialGraphToImageISS4ISS4_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageISS4ISS4_cast


def tubeConvertSpatialGraphToImageIUC2IUC2_New():
    return tubeConvertSpatialGraphToImageIUC2IUC2.New()

class tubeConvertSpatialGraphToImageIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageIUC2IUC2
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageIUC2IUC2

        Create a new object of the class tubeConvertSpatialGraphToImageIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageIUC2IUC2 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_swigregister(tubeConvertSpatialGraphToImageIUC2IUC2)
tubeConvertSpatialGraphToImageIUC2IUC2___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2___New_orig__
tubeConvertSpatialGraphToImageIUC2IUC2_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC2IUC2_cast


def tubeConvertSpatialGraphToImageIUC3IUC3_New():
    return tubeConvertSpatialGraphToImageIUC3IUC3.New()

class tubeConvertSpatialGraphToImageIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageIUC3IUC3
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageIUC3IUC3

        Create a new object of the class tubeConvertSpatialGraphToImageIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageIUC3IUC3 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_swigregister(tubeConvertSpatialGraphToImageIUC3IUC3)
tubeConvertSpatialGraphToImageIUC3IUC3___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3___New_orig__
tubeConvertSpatialGraphToImageIUC3IUC3_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC3IUC3_cast


def tubeConvertSpatialGraphToImageIUC4IUC4_New():
    return tubeConvertSpatialGraphToImageIUC4IUC4.New()

class tubeConvertSpatialGraphToImageIUC4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageIUC4IUC4
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageIUC4IUC4

        Create a new object of the class tubeConvertSpatialGraphToImageIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageIUC4IUC4 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_swigregister(tubeConvertSpatialGraphToImageIUC4IUC4)
tubeConvertSpatialGraphToImageIUC4IUC4___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4___New_orig__
tubeConvertSpatialGraphToImageIUC4IUC4_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUC4IUC4_cast


def tubeConvertSpatialGraphToImageIUS2IUS2_New():
    return tubeConvertSpatialGraphToImageIUS2IUS2.New()

class tubeConvertSpatialGraphToImageIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageIUS2IUS2
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageIUS2IUS2

        Create a new object of the class tubeConvertSpatialGraphToImageIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageIUS2IUS2 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_swigregister(tubeConvertSpatialGraphToImageIUS2IUS2)
tubeConvertSpatialGraphToImageIUS2IUS2___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2___New_orig__
tubeConvertSpatialGraphToImageIUS2IUS2_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS2IUS2_cast


def tubeConvertSpatialGraphToImageIUS3IUS3_New():
    return tubeConvertSpatialGraphToImageIUS3IUS3.New()

class tubeConvertSpatialGraphToImageIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageIUS3IUS3
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageIUS3IUS3

        Create a new object of the class tubeConvertSpatialGraphToImageIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageIUS3IUS3 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_swigregister(tubeConvertSpatialGraphToImageIUS3IUS3)
tubeConvertSpatialGraphToImageIUS3IUS3___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3___New_orig__
tubeConvertSpatialGraphToImageIUS3IUS3_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS3IUS3_cast


def tubeConvertSpatialGraphToImageIUS4IUS4_New():
    return tubeConvertSpatialGraphToImageIUS4IUS4.New()

class tubeConvertSpatialGraphToImageIUS4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertSpatialGraphToImageIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_Clone)
    GetAdjacencyMatrixImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_GetAdjacencyMatrixImage)
    GetBranchnessImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_GetBranchnessImage)
    GetRadiusImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_GetRadiusImage)
    GetCentralityImage = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_GetCentralityImage)
    SetInput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_SetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_GetOutput)
    SetAdjacencyMatrix = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_SetAdjacencyMatrix)
    SetBranchnessVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_SetBranchnessVector)
    SetRadiusVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_SetRadiusVector)
    SetCentralityVector = _swig_new_instance_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_SetCentralityVector)
    __swig_destroy__ = _tubeConvertSpatialGraphToImagePython.delete_tubeConvertSpatialGraphToImageIUS4IUS4
    cast = _swig_new_static_method(_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertSpatialGraphToImageIUS4IUS4

        Create a new object of the class tubeConvertSpatialGraphToImageIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertSpatialGraphToImageIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertSpatialGraphToImageIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertSpatialGraphToImageIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertSpatialGraphToImageIUS4IUS4 in _tubeConvertSpatialGraphToImagePython:
_tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_swigregister(tubeConvertSpatialGraphToImageIUS4IUS4)
tubeConvertSpatialGraphToImageIUS4IUS4___New_orig__ = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4___New_orig__
tubeConvertSpatialGraphToImageIUS4IUS4_cast = _tubeConvertSpatialGraphToImagePython.tubeConvertSpatialGraphToImageIUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def convert_spatial_graph_to_image(*args,  adjacency_matrix=..., branchness_vector=..., radius_vector=..., centrality_vector=...,**kwargs):
    """Functional interface for ConvertSpatialGraphToImage"""
    import itk

    kwarg_typehints = { 'adjacency_matrix':adjacency_matrix,'branchness_vector':branchness_vector,'radius_vector':radius_vector,'centrality_vector':centrality_vector }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ConvertSpatialGraphToImage.New(*args, **kwargs)

    return instance.__internal_call__()

def convert_spatial_graph_to_image_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TubeTK.ConvertSpatialGraphToImage
    convert_spatial_graph_to_image.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    convert_spatial_graph_to_image.__doc__ = filter_object.__doc__




