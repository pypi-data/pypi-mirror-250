# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeShrinkImageWithBlendingPython
else:
    import _tubeShrinkImageWithBlendingPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeShrinkImageWithBlendingPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeShrinkImageWithBlendingPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkSizePython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython

def tubeShrinkImageWithBlendingID2ID2_New():
    return tubeShrinkImageWithBlendingID2ID2.New()

class tubeShrinkImageWithBlendingID2ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingID2ID2
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingID2ID2

        Create a new object of the class tubeShrinkImageWithBlendingID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingID2ID2 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_swigregister(tubeShrinkImageWithBlendingID2ID2)
tubeShrinkImageWithBlendingID2ID2___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2___New_orig__
tubeShrinkImageWithBlendingID2ID2_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_cast


def tubeShrinkImageWithBlendingID3ID3_New():
    return tubeShrinkImageWithBlendingID3ID3.New()

class tubeShrinkImageWithBlendingID3ID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingID3ID3
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingID3ID3

        Create a new object of the class tubeShrinkImageWithBlendingID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingID3ID3 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_swigregister(tubeShrinkImageWithBlendingID3ID3)
tubeShrinkImageWithBlendingID3ID3___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3___New_orig__
tubeShrinkImageWithBlendingID3ID3_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_cast


def tubeShrinkImageWithBlendingID4ID4_New():
    return tubeShrinkImageWithBlendingID4ID4.New()

class tubeShrinkImageWithBlendingID4ID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingID4ID4
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingID4ID4

        Create a new object of the class tubeShrinkImageWithBlendingID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingID4ID4 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_swigregister(tubeShrinkImageWithBlendingID4ID4)
tubeShrinkImageWithBlendingID4ID4___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4___New_orig__
tubeShrinkImageWithBlendingID4ID4_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_cast


def tubeShrinkImageWithBlendingIF2IF2_New():
    return tubeShrinkImageWithBlendingIF2IF2.New()

class tubeShrinkImageWithBlendingIF2IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIF2IF2
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIF2IF2

        Create a new object of the class tubeShrinkImageWithBlendingIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIF2IF2 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_swigregister(tubeShrinkImageWithBlendingIF2IF2)
tubeShrinkImageWithBlendingIF2IF2___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2___New_orig__
tubeShrinkImageWithBlendingIF2IF2_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_cast


def tubeShrinkImageWithBlendingIF3IF3_New():
    return tubeShrinkImageWithBlendingIF3IF3.New()

class tubeShrinkImageWithBlendingIF3IF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIF3IF3
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIF3IF3

        Create a new object of the class tubeShrinkImageWithBlendingIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIF3IF3 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_swigregister(tubeShrinkImageWithBlendingIF3IF3)
tubeShrinkImageWithBlendingIF3IF3___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3___New_orig__
tubeShrinkImageWithBlendingIF3IF3_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_cast


def tubeShrinkImageWithBlendingIF4IF4_New():
    return tubeShrinkImageWithBlendingIF4IF4.New()

class tubeShrinkImageWithBlendingIF4IF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIF4IF4
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIF4IF4

        Create a new object of the class tubeShrinkImageWithBlendingIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIF4IF4 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_swigregister(tubeShrinkImageWithBlendingIF4IF4)
tubeShrinkImageWithBlendingIF4IF4___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4___New_orig__
tubeShrinkImageWithBlendingIF4IF4_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_cast


def tubeShrinkImageWithBlendingISS2ISS2_New():
    return tubeShrinkImageWithBlendingISS2ISS2.New()

class tubeShrinkImageWithBlendingISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingISS2ISS2
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingISS2ISS2

        Create a new object of the class tubeShrinkImageWithBlendingISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingISS2ISS2 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_swigregister(tubeShrinkImageWithBlendingISS2ISS2)
tubeShrinkImageWithBlendingISS2ISS2___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2___New_orig__
tubeShrinkImageWithBlendingISS2ISS2_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_cast


def tubeShrinkImageWithBlendingISS3ISS3_New():
    return tubeShrinkImageWithBlendingISS3ISS3.New()

class tubeShrinkImageWithBlendingISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingISS3ISS3
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingISS3ISS3

        Create a new object of the class tubeShrinkImageWithBlendingISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingISS3ISS3 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_swigregister(tubeShrinkImageWithBlendingISS3ISS3)
tubeShrinkImageWithBlendingISS3ISS3___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3___New_orig__
tubeShrinkImageWithBlendingISS3ISS3_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_cast


def tubeShrinkImageWithBlendingISS4ISS4_New():
    return tubeShrinkImageWithBlendingISS4ISS4.New()

class tubeShrinkImageWithBlendingISS4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingISS4ISS4
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingISS4ISS4

        Create a new object of the class tubeShrinkImageWithBlendingISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingISS4ISS4 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_swigregister(tubeShrinkImageWithBlendingISS4ISS4)
tubeShrinkImageWithBlendingISS4ISS4___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4___New_orig__
tubeShrinkImageWithBlendingISS4ISS4_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_cast


def tubeShrinkImageWithBlendingIUC2IUC2_New():
    return tubeShrinkImageWithBlendingIUC2IUC2.New()

class tubeShrinkImageWithBlendingIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUC2IUC2
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUC2IUC2

        Create a new object of the class tubeShrinkImageWithBlendingIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUC2IUC2 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_swigregister(tubeShrinkImageWithBlendingIUC2IUC2)
tubeShrinkImageWithBlendingIUC2IUC2___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2___New_orig__
tubeShrinkImageWithBlendingIUC2IUC2_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_cast


def tubeShrinkImageWithBlendingIUC3IUC3_New():
    return tubeShrinkImageWithBlendingIUC3IUC3.New()

class tubeShrinkImageWithBlendingIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUC3IUC3
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUC3IUC3

        Create a new object of the class tubeShrinkImageWithBlendingIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUC3IUC3 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_swigregister(tubeShrinkImageWithBlendingIUC3IUC3)
tubeShrinkImageWithBlendingIUC3IUC3___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3___New_orig__
tubeShrinkImageWithBlendingIUC3IUC3_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_cast


def tubeShrinkImageWithBlendingIUC4IUC4_New():
    return tubeShrinkImageWithBlendingIUC4IUC4.New()

class tubeShrinkImageWithBlendingIUC4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUC4IUC4
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUC4IUC4

        Create a new object of the class tubeShrinkImageWithBlendingIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUC4IUC4 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_swigregister(tubeShrinkImageWithBlendingIUC4IUC4)
tubeShrinkImageWithBlendingIUC4IUC4___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4___New_orig__
tubeShrinkImageWithBlendingIUC4IUC4_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_cast


def tubeShrinkImageWithBlendingIUS2IUS2_New():
    return tubeShrinkImageWithBlendingIUS2IUS2.New()

class tubeShrinkImageWithBlendingIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUS2IUS2
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUS2IUS2

        Create a new object of the class tubeShrinkImageWithBlendingIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUS2IUS2 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_swigregister(tubeShrinkImageWithBlendingIUS2IUS2)
tubeShrinkImageWithBlendingIUS2IUS2___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2___New_orig__
tubeShrinkImageWithBlendingIUS2IUS2_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_cast


def tubeShrinkImageWithBlendingIUS3IUS3_New():
    return tubeShrinkImageWithBlendingIUS3IUS3.New()

class tubeShrinkImageWithBlendingIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUS3IUS3
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUS3IUS3

        Create a new object of the class tubeShrinkImageWithBlendingIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUS3IUS3 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_swigregister(tubeShrinkImageWithBlendingIUS3IUS3)
tubeShrinkImageWithBlendingIUS3IUS3___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3___New_orig__
tubeShrinkImageWithBlendingIUS3IUS3_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_cast


def tubeShrinkImageWithBlendingIUS4IUS4_New():
    return tubeShrinkImageWithBlendingIUS4IUS4.New()

class tubeShrinkImageWithBlendingIUS4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_Clone)
    SetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetShrinkFactor)
    GetShrinkFactor = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetShrinkFactor)
    SetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetNewSize)
    GetNewSize = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetNewSize)
    GetShrinkFactors = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetShrinkFactors)
    SetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetOverlap)
    GetOverlap = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetOverlap)
    SetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetBlendWithMean)
    GetBlendWithMean = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetBlendWithMean)
    SetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetBlendWithMax)
    GetBlendWithMax = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetBlendWithMax)
    SetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetBlendWithGaussianWeighting)
    GetBlendWithGaussianWeighting = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetBlendWithGaussianWeighting)
    SetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetUseLog)
    GetUseLog = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetUseLog)
    GenerateOutputInformation = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GenerateInputRequestedRegion)
    SetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetInput)
    SetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetInputMipPointImage)
    GetInputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetInputMipPointImage)
    GetOutput = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetOutput)
    GetOutputMipPointImage = _swig_new_instance_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetOutputMipPointImage)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUS4IUS4
    cast = _swig_new_static_method(_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUS4IUS4

        Create a new object of the class tubeShrinkImageWithBlendingIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUS4IUS4 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_swigregister(tubeShrinkImageWithBlendingIUS4IUS4)
tubeShrinkImageWithBlendingIUS4IUS4___New_orig__ = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4___New_orig__
tubeShrinkImageWithBlendingIUS4IUS4_cast = _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def shrink_image_with_blending(*args,  shrink_factors: Sequence[int]=..., shrink_factor: int=..., new_size: Sequence[int]=..., overlap: Sequence[int]=..., blend_with_mean: bool=..., blend_with_max: bool=..., blend_with_gaussian_weighting: bool=..., use_log: bool=..., input_mip_point_image: itkt.Image=...,**kwargs):
    """Functional interface for ShrinkImageWithBlending"""
    import itk

    kwarg_typehints = { 'shrink_factors':shrink_factors,'shrink_factor':shrink_factor,'new_size':new_size,'overlap':overlap,'blend_with_mean':blend_with_mean,'blend_with_max':blend_with_max,'blend_with_gaussian_weighting':blend_with_gaussian_weighting,'use_log':use_log,'input_mip_point_image':input_mip_point_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ShrinkImageWithBlending.New(*args, **kwargs)

    return instance.__internal_call__()

def shrink_image_with_blending_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TubeTK.ShrinkImageWithBlending
    shrink_image_with_blending.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    shrink_image_with_blending.__doc__ = filter_object.__doc__




