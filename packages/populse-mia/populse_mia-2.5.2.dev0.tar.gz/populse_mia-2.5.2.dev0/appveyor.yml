environment:

  matrix:

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      PYTHON: "C:\\Python39-x64"
#      APPVEYOR_RDP_PASSWORD: 5fh'D*

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
      PYTHON: "$HOME/venv3.9"
#      APPVEYOR_SSH_KEY: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCinsCtblP8Dlo0IyeE3chxy7Opt1nrrhLWQCUFJBtWr1EjtvZSme00z56yV2c0WWlhKyVUbz56w893WHTjvqgeZuezzGM1vdeD+fQDPBn3WhhOQHNmL2VxDo+f1CFE7ybT6epYPrvdz4B7MqORX8lIOIVVL82GclpDxnJkM7LzMWbOvJ7Gjf12Ob45Nx2ESZxHVv5Z9GeAmMyX2gHu3dlhJQoq6YQ0U/aqkFzfYLbEI5/H78Xmd2YzlxDnzNPB9xbjNqub1KTS+p3JhhSXJgWHeRn/kqwwkOdTnjG1yZoCWgSzCHsQx9oacYciY49Lo5falgIIw3ORJWgk/vjedxDFjBLgYj5NPzGcaxgzsFmMDWyynTSZyysb3HKbydODXV9i40dEnC9gfBQER0m9/cXPcxBK7oVZdZwrxXm0Ke3QGYtRLmh9N2lTUm51/IPBRaDH6/L1se4NgVuT2uytHEYN2t30r14CJhzJ2QGCoas8sxFS9Pt0BWzC4C1WQyZlDN0= econdami@irmage-pteric

    - APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
      PYTHON: "~/venv3.9"
#      APPVEYOR_SSH_KEY: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCdDYk1yZyk/W/2UtL1oBEDzX9Mk6YUXJKS3gTrZaK+ScAzPUkm7UlXwwpzSYZjKIkYzpi3WKSRKuDc7VRVk43hIhmwaIzcmpHAXtbgxAGRYembgz+kLDGtkhlP4i8n5GfNWvkkfbS0pu2w2dZQB7EGFFtopfvzBokKltjAYOnP89GCAo4MTfx6kmv1tpm1SDbCAGHJPuN+81B47+v0uGw3KG+AX+1ezPv1MCBQl5V2J4MI6vomyaHz6/UNBZ6rpsrZBYRljwWbyH5E5fqLdep/kO9sEuiXxTrCTLnUPSrR0+h0f8HlgWCaqxO+OUyDoQMI3xsUn4sMpoASi8jkDgd51vGbzkQHyjy2hYzjs47GAvLLtGfTJYQBVcfXEoZaKQUJhqjR7TUdY4bSBOxIPR9qlA9fLFwlQsC3++0m4roM/0SyoDVTz0I6lp1TsYRMKxEJSM90ewCAK8UnN6gEqmOz5ezOFpVsnpz4bZ7vCGaJa/6ODfOhEvl5bFUK40+GxSk= otavio@otavio-UX430UAR

build: off

install:
  - cmd: echo "     ** windows build **"
  - sh: if [[ $(uname -s) == Linux ]]; then echo "     ** linux build **"; fi
  - sh: if [[ $(uname -s) == Darwin ]]; then echo "     ** macos build **"; fi

#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
#  - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -

  - cmd: SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
  - sh: export PATH=~/venv3.9/bin:~/venv3.9/lib:$PATH
  - sh: if [[ $(uname -s) == Linux ]]; then export QT_LOGGING_RULES='*.debug=false;qt.qpa.*=false'; fi

  - python --version
  - python -m pip install pip --upgrade
  - pip -V
  - pip install --upgrade setuptools wheel
  - pip install cython --upgrade
  - pip install numpy
  - pip install freetype-py
  - pip install pypng
  - pip install pywavelets --upgrade
  - pip install psutil
  - pip install qtconsole
  - pip install jupyter_core
  - pip install nibabel
  - pip install traits

  - cmd: pip install pypiwin32

  - pip install matplotlib
  - pip install scipy

# A patch to install dipy (mia_processes requirement) in Windows builds:
# see https://ci.appveyor.com/project/populse/populse-mia/builds/47455621/job/kugl7p8afeu1lh07#L351
#  - cmd: pip install h5py
#  - cmd: pip install tqdm
#  - cmd: pip install -i https://pypi.anaconda.org/scipy-wheels-nightly/simple dipy
  - pip install dipy

# install nipy from source, seems to not work from pip install nipy
#  - pip install git+https://github.com/nipy/nipy@main
# or
#  - cmd: git clone --depth=50 --branch=main https://github.com/nipy/nipy.git C:\\projects\\nipy
#  - sh: if [[ $(uname -s) == Linux ]]; then git clone --depth=50 --branch=main https://github.com/nipy/nipy.git /home/appveyor/projects/nipy; fi
#  - sh: if [[ $(uname -s) == Darwin ]]; then git clone --depth=50 --branch=main https://github.com/nipy/nipy.git /Users/appveyor/projects/nipy; fi
#  - cd ../nipy
#  - pip install .
#  - cd ../populse-mia
  - pip install nipy
  - pip install scikit-image
  - pip install pyparsing --upgrade

# This is a patch to avoid the "AttributeError: 'PathMetadata' object has no attribute 'isdir'" observed since pip-22.0.2 (see for example UT for commit 50187200b6):
  - pip install capsul soma-workflow

  - pip install .
  - git lfs install
  - git lfs pull
  - echo y | pip uninstall PyQt5
  - echo y | pip uninstall PyQt5-sip
  - pip install PyQt5

  # We want to use the last github versions instead of the pypi version:
  - pip uninstall -y populse_db soma-base soma-workflow capsul mia_processes

  - cmd: git clone --depth=50 --branch=master https://github.com/populse/populse_db.git C:\\projects\\populse_db
  - sh: if [[ $(uname -s) == Linux ]]; then git clone --depth=50 --branch=master https://github.com/populse/populse_db.git /home/appveyor/projects/populse_db; fi
  - sh: if [[ $(uname -s) == Darwin ]]; then git clone --depth=50 --branch=master https://github.com/populse/populse_db.git /Users/appveyor/projects/populse_db; fi

  - cmd: cd C:\\projects\\populse_db
  - sh: if [[ $(uname -s) == Linux ]]; then cd /home/appveyor/projects/populse_db; fi
  - sh: if [[ $(uname -s) == Darwin ]]; then cd /Users/appveyor/projects/populse_db; fi

  - pip install -e .[postgres]
  - cd ..

  - cmd: git clone --depth=50 --branch=master https://github.com/populse/soma-base.git C:\\projects\\soma-base
  - sh: if [[ $(uname -s) == Linux ]]; then git clone --depth=50 --branch=master https://github.com/populse/soma-base.git /home/appveyor/projects/soma-base; fi
  - sh: if [[ $(uname -s) == Darwin ]]; then git clone --depth=50 --branch=master https://github.com/populse/soma-base.git /Users/appveyor/projects/soma-base; fi

  - cmd: git clone --depth=50 --branch=master https://github.com/populse/soma-workflow.git C:\\projects\\soma-workflow
  - sh: if [[ $(uname -s) == Linux ]]; then git clone --depth=50 --branch=master https://github.com/populse/soma-workflow.git /home/appveyor/projects/soma-workflow; fi
  - sh: if [[ $(uname -s) == Darwin ]]; then git clone --depth=50 --branch=master https://github.com/populse/soma-workflow.git /Users/appveyor/projects/soma-workflow; fi

  - cmd: git clone --depth=50 --branch=master https://github.com/populse/capsul.git C:\\projects\\capsul
  - sh: if [[ $(uname -s) == Linux ]]; then git clone --depth=50 --branch=master https://github.com/populse/capsul.git /home/appveyor/projects/capsul; fi
  - sh: if [[ $(uname -s) == Darwin ]]; then git clone --depth=50 --branch=master https://github.com/populse/capsul.git /Users/appveyor/projects/capsul; fi

  - cmd: git clone --depth=50 --branch=master https://github.com/populse/mia_processes.git C:\\projects\\mia_processes
  - sh: if [[ $(uname -s) == Linux ]]; then git clone --depth=50 --branch=master https://github.com/populse/mia_processes.git /home/appveyor/projects/mia_processes; fi
  - sh: if [[ $(uname -s) == Darwin ]]; then git clone --depth=50 --branch=master https://github.com/populse/mia_processes.git /Users/appveyor/projects/mia_processes; fi

# Download data for unit tests
  - cmd: git clone --depth=50 --branch=main https://gricad-gitlab.univ-grenoble-alpes.fr/condamie/miautdata.git C:\\projects\\populse-mia\\miautdata
  - sh: if [[ $(uname -s) == Linux ]]; then git clone --depth=50 --branch=main https://gricad-gitlab.univ-grenoble-alpes.fr/condamie/miautdata.git /home/appveyor/projects/populse-mia/miautdata; fi
  - sh: if [[ $(uname -s) == Darwin ]]; then git clone --depth=50 --branch=main https://gricad-gitlab.univ-grenoble-alpes.fr/condamie/miautdata.git /Users/appveyor/projects/populse-mia/miautdata; fi

  - cd populse-mia

  - sh: if [[ $(uname -s) == Linux ]]; then Xvfb & fi
  - sh: if [[ $(uname -s) == Linux ]]; then pip3 install coverage[toml]; fi # Fix: Can't read 'pyproject.toml' without TOML support. Install with [toml] extra
  - sh: if [[ $(uname -s) == Linux ]]; then sleep 3; fi # give xvfb some time to start

#  - sh: export APPVEYOR_SSH_BLOCK=true
#  - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

test_script:
  - cmd: python .\\populse_mia\\test.py -v

  - sh: if [[ $(uname -s) == Darwin ]]; then python3 ./populse_mia/test.py -v; fi

  - sh: if [[ $(uname -s) == Linux ]]; then if [ -z $XDG_RUNTIME_DIR ]; then export XDG_RUNTIME_DIR="/tmp/runtime-$(id -un)"; if [ ! -d "/tmp/runtime-$(id -un)" ]; then mkdir "/tmp/runtime-$(id -un)"; chmod 0700 "/tmp/runtime-$(id -un)"; fi; fi; fi
  - sh: if [[ $(uname -s) == Linux ]]; then xvfb-run python3 ./populse_mia/test.py -v; fi
  - sh: if [[ $(uname -s) == Linux ]]; then xvfb-run coverage run ./populse_mia/test.py -v; fi
  - sh: if [[ $(uname -s) == Linux ]]; then coverage xml -i; fi


after_test:
#  - sh: if [[ $(uname -s) == Linux ]]; then codecov; fi
  - sh: if [[ $(uname -s) == Linux ]]; then curl -Os https://uploader.codecov.io/latest/linux/codecov; fi
  - sh: if [[ $(uname -s) == Linux ]]; then chmod +x codecov; fi
  - sh: if [[ $(uname -s) == Linux ]]; then ./codecov -f "coverage.xml" -t "da09d9b5-de99-476e-a0ba-81c772e65afb"; fi

notifications:
  - provider: Email
    to:
      - '{{commitAuthorEmail}}'
    on_build_failure: true
    on_build_success: false
    on_build_status_changed: true
