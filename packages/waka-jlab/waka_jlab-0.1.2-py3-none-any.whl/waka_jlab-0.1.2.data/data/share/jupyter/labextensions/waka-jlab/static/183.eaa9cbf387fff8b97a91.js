"use strict";(self.webpackChunkwaka_jlab=self.webpackChunkwaka_jlab||[]).push([[183],{183:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var o=n(576),a=n(483),r=n(429);let c=Date.now();const s=(e,t)=>{console.log(t,e);const n=Date.now();if("change"===t&&n-c<12e4)return;const o={filepath:e,timestamp:n/1e3,iswrite:"write"===t};(async function(e="",t={}){const n=r.ServerConnection.makeSettings(),o=a.URLExt.join(n.baseUrl,"waka-jlab",e);let c;try{c=await r.ServerConnection.makeRequest(o,t,n)}catch(e){throw new r.ServerConnection.NetworkError(e)}let s=await c.text();if(s.length>0)try{s=JSON.parse(s)}catch(e){console.log("Not a JSON response body.",c)}if(!c.ok)throw new r.ServerConnection.ResponseError(c,s.message||s);return s})("heartbeat",{body:JSON.stringify(o),method:"POST"}).then((()=>{c=n}))},i={id:"waka-jlab:plugin",description:"A JupyterLab WakaTime extension.",autoStart:!0,requires:[o.INotebookTracker],activate:(e,t)=>{console.log("JupyterLab extension waka-jlab is activated!"),t.widgetAdded.connect(((e,t)=>{var n,o;const a=t.sessionContext.path;null===(n=t.content.model)||void 0===n||n.contentChanged.connect((()=>{s(a,"change")})),null===(o=t.content.model)||void 0===o||o.stateChanged.connect(((e,t)=>{"dirty"===t.name&&t.oldValue&&s(a,"write")}))})),t.currentChanged.connect(((e,t)=>{null!==t&&s(t.sessionContext.path,"switch")}))}}}}]);