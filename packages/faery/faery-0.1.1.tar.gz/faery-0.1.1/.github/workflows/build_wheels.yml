name: Build

on:
  push:
  pull_request:
  release:
    types:
      - published

env:
  CIBW_ARCHS_MACOS: x86_64 arm64
  CIBW_BEFORE_ALL_LINUX: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain=stable --profile=minimal -y
  CIBW_ENVIRONMENT_LINUX: 'PATH="$HOME/.cargo/bin:$PATH"'
  CIBW_SKIP: cp36-* cp37-* pp* *i686

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup target add aarch64-apple-darwin
        if: startsWith(matrix.os, 'macos')
      - run: rustup target add i686-pc-windows-msvc
        if: startsWith(matrix.os, 'windows')
      - uses: pypa/cibuildwheel@v2.16.2
      - uses: actions/upload-artifact@v3
        with:
          name: wheelhouse
          path: ./wheelhouse/*.whl
  import_library:
    name: Import library on ${{ matrix.os }} with Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    needs: [build_wheels]
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - uses: actions/download-artifact@v3
      with:
        name: wheelhouse
        path: wheelhouse
    - run: python -m pip install --find-links wheelhouse faery
    - uses: actions/checkout@v3
    - run: python test.py
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: pipx run build --sdist
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*.tar.gz
  upload_pypi:
    name: Upload wheels and sidst to PyPI
    runs-on: ubuntu-latest
    needs: [build_wheels, import_library, build_sdist]
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheelhouse
          path: wheelhouse
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - run: mv wheelhouse/* dist/
      - uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
