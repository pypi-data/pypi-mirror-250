"use strict";(self.webpackChunk_jupyterlite_xeus=self.webpackChunk_jupyterlite_xeus||[]).push([[413],{413:(e,s,t)=>{t.r(s),t.d(s,{default:()=>u});var i=t(483),n=t(144),r=t(430),o=t(312),a=t(684),l=t(901),d=t(930);class g{constructor(e){this._isDisposed=!1,this._disposed=new l.Signal(this),this._executeDelegate=new d.PromiseDelegate,this._parentHeader=void 0,this._parent=void 0;const{id:s,name:n,sendMessage:r,location:o}=e;this._id=s,this._name=n,this._location=o,this._kernelspec=e.kernelspec,this._sendMessage=r,this._worker=new Worker(new URL(t.p+t.u(213),t.b),{type:void 0}),this._worker.onmessage=e=>{this._processWorkerMessage(e.data)},this._remote=(0,a.wrap)(this._worker),this._remote.initialize(this._kernelspec,i.PageConfig.getBaseUrl()),this.initFileSystem(e)}async handleMessage(e){this._parent=e,this._parentHeader=e.header,await this._sendMessageToWorker(e)}async _sendMessageToWorker(e){if("input_reply"!==e.header.msg_type&&(this._executeDelegate=new d.PromiseDelegate),await this._remote.processMessage({msg:e,parent:this.parent}),"input_reply"!==e.header.msg_type)return await this._executeDelegate.promise}get parentHeader(){return this._parentHeader}get parent(){return this._parent}get location(){return this._location}_processWorkerMessage(e){var s,t,i,n;e.header&&(e.header.session=null!==(t=null===(s=this._parentHeader)||void 0===s?void 0:s.session)&&void 0!==t?t:"",e.session=null!==(n=null===(i=this._parentHeader)||void 0===i?void 0:i.session)&&void 0!==n?n:"",this._sendMessage(e),"status"===e.header.msg_type&&"idle"===e.content.execution_state&&this._executeDelegate.resolve())}get ready(){return Promise.resolve()}get isDisposed(){return this._isDisposed}get disposed(){return this._disposed}dispose(){this.isDisposed||(this._worker.terminate(),this._worker=null,this._remote=null,this._isDisposed=!0,this._disposed.emit(void 0))}get id(){return this._id}get name(){return this._name}async initFileSystem(e){let s,t;if(e.location.includes(":")){const i=e.location.split(":");s=i[0],t=i[1]}else s="",t=e.location;await this._remote.ready(),e.mountDrive&&(await this._remote.mount(s,"/drive",i.PageConfig.getBaseUrl()),await this._remote.cd(t))}}function h(e){const s=i.URLExt.join(i.PageConfig.getBaseUrl(),e),t=new XMLHttpRequest;return t.open("GET",s,!1),t.send(null),JSON.parse(t.responseText)}let p=[];try{p=h("xeus/kernels.json")}catch(e){throw console.log(`Could not fetch xeus/kernels.json: ${e}`),e}const u=p.map((e=>({id:`@jupyterlite/xeus-${e}:register`,autoStart:!0,requires:[o.IKernelSpecs],optional:[n.IServiceWorkerManager,r.IBroadcastChannelWrapper],activate:(s,t,n,r)=>{const o=h("xeus/kernels/"+e+"/kernel.json");o.name=e,o.dir=e,o.resources={"logo-32x32":i.URLExt.join(i.PageConfig.getBaseUrl(),"xeus/kernels/"+e+"/logo-32x32.png"),"logo-64x64":i.URLExt.join(i.PageConfig.getBaseUrl(),"xeus/kernels/"+e+"/logo-64x64.png"),"logo-svg":i.URLExt.join(i.PageConfig.getBaseUrl(),"xeus/kernels/"+e+"/logo-svg.svg")},t.register({spec:o,create:async e=>{const s=!(!(null==n?void 0:n.enabled)||!(null==r?void 0:r.enabled));return s?console.info(`${o.name} contents will be synced with Jupyter Contents`):console.warn(`${o.name} contents will NOT be synced with Jupyter Contents`),new g({...e,mountDrive:s,kernelspec:o})}})}})))}}]);