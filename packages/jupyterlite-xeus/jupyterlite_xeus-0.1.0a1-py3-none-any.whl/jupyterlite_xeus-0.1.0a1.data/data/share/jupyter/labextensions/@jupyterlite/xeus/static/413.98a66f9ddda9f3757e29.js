"use strict";(self.webpackChunk_jupyterlite_xeus=self.webpackChunk_jupyterlite_xeus||[]).push([[413],{413:(e,s,t)=>{t.r(s),t.d(s,{default:()=>u});var r=t(144),o=t(430),n=t(312),i=t(684),a=t(901),l=t(930),c=t(483);class p{constructor(e){this._isDisposed=!1,this._disposed=new a.Signal(this),this._executeDelegate=new l.PromiseDelegate,this._parentHeader=void 0,this._parent=void 0,console.log("constructing WebWorkerKernel kernel");const{id:s,name:r,sendMessage:o,location:n}=e;this._id=s,this._name=r,this._location=n,this._kernelspec=e.kernelspec,this._sendMessage=o,console.log("constructing WebWorkerKernel worker"),this._worker=new Worker(new URL(t.p+t.u(213),t.b),{type:void 0}),console.log("constructing WebWorkerKernel done"),this._worker.onmessage=e=>{this._processWorkerMessage(e.data)},console.log("wrap"),this._remote=(0,i.wrap)(this._worker),console.log("wrap done"),this._remote.processMessage({msg:{header:{msg_type:"__initialize__"},kernelspec:this._kernelspec}}),console.log("init filesystem"),this.initFileSystem(e),console.log("constructing WebWorkerKernel done2")}async handleMessage(e){console.log("handleMessage",e),this._parent=e,this._parentHeader=e.header,console.log("send message to worker"),await this._sendMessageToWorker(e),console.log("send message to worker awaiting done")}async _sendMessageToWorker(e){if("input_reply"!==e.header.msg_type&&(this._executeDelegate=new l.PromiseDelegate),console.log(" this._remote.processMessage({ msg, parent: this.parent });"),await this._remote.processMessage({msg:e,parent:this.parent}),console.log(" this._remote.processMessage({ msg, parent: this.parent }); done"),"input_reply"!==e.header.msg_type)return await this._executeDelegate.promise}get parentHeader(){return this._parentHeader}get parent(){return this._parent}get location(){return this._location}_processWorkerMessage(e){var s,t,r,o;console.log("processWorkerMessage",e),e.header&&(e.header.session=null!==(t=null===(s=this._parentHeader)||void 0===s?void 0:s.session)&&void 0!==t?t:"",e.session=null!==(o=null===(r=this._parentHeader)||void 0===r?void 0:r.session)&&void 0!==o?o:"",this._sendMessage(e),"status"===e.header.msg_type&&"idle"===e.content.execution_state&&this._executeDelegate.resolve())}get ready(){return Promise.resolve()}get isDisposed(){return this._isDisposed}get disposed(){return this._disposed}dispose(){this.isDisposed||(this._worker.terminate(),this._worker=null,this._remote=null,this._isDisposed=!0,this._disposed.emit(void 0))}get id(){return this._id}get name(){return this._name}async initFileSystem(e){let s,t;if(e.location.includes(":")){const r=e.location.split(":");s=r[0],t=r[1]}else s="",t=e.location;await this._remote.ready(),e.mountDrive&&(await this._remote.mount(s,"/drive",c.PageConfig.getBaseUrl()),await this._remote.cd(t))}}const d="../extensions/@jupyterlite/xeus/static/";function h(e){const s=d+e,t=new XMLHttpRequest;return t.open("GET",s,!1),t.send(null),JSON.parse(t.responseText)}let g=[];try{g=h("share/jupyter/kernels.json")}catch(e){throw console.log(e),console.log("could not fetch share/jupyter/kernels/kernels.json"),g=[],e}const u=g.map((e=>{const s=h("share/jupyter/kernels/"+e+"/kernel.json");return s.name=e,s.dir=e,s.resources={"logo-32x32":d+"share/jupyter/kernels/"+e+"/logo-32x32.png","logo-64x64":d+"share/jupyter/kernels/"+e+"/logo-64x64.png"},s})).map((e=>({id:`@jupyterlite/${e.name}-extension:kernel`,autoStart:!0,requires:[n.IKernelSpecs],optional:[r.IServiceWorkerManager,o.IBroadcastChannelWrapper],activate:(s,t,r,o)=>{t.register({spec:e,create:async s=>{const t=!(!(null==r?void 0:r.enabled)||!(null==o?void 0:o.enabled));return t?console.info(`${e.name} contents will be synced with Jupyter Contents`):console.warn(`${e.name} contents will NOT be synced with Jupyter Contents`),new p({...s,mountDrive:t,kernelspec:e})}})}})))}}]);