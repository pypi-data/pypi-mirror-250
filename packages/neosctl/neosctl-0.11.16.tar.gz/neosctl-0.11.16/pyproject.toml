[tool.poetry]
name = "neosctl"
version = "0.11.16"
description = "Nortal Core CLI"
authors = []
license = "closed"
repository="https://github.com/NEOS-Critical/neos-platform-cli"
homepage="https://github.com/NEOS-Critical/neos-platform-cli"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"

httpx = "^0.23.0"
typer = "^0.6.1"
Pygments = "^2.13.0"
typing_extensions = { version = "^4.7.0", python = "<3.10" }
jq = { version = "^1.4.0", markers = "sys_platform != 'win32'" }
minio = "^7.1.14"
pydantic = "^2"
neos-common = "^0.10.7"

[tool.poetry.dev-dependencies]

# Tests
freezegun = "^1.2.1"
pretend = "^1.0.9"
pytest = "~7.1.2"
pytest-asyncio = "^0.18.3"
pytest-benchmark = "^3.4.1"
pytest-cov = "^3.0.0"
pytest-env = "^0.8.1"
pytest-random-order = "^1.0.4"
requests = "^2.28.1"
pytest-httpx = "^0.21.0"

# Style
ruff = {version="^0.1.2", source="pypi"}
pre-commit = {version="^3.0.2", source="pypi"}

# Releases
bump2version = "*"

[tool.poetry.group.dev.dependencies]
pyright = "^1.1.293"
pdoc = "^14.1.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--random-order"
env = [
]
markers = [
    "nodotfile_patch: don't auto patch a dotfile into existence",
    "nocredential_patch: don't auto patch a credential file into existence",
]


[tool.coverage.report]
sort = "cover"
fail_under = 98
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "if __name__ == '__main__':",
    "@abc.abstractmethod"
]

[tool.coverage.run]
branch = true
source = ["neosctl"]

[tool.ruff]
target-version = "py38"
line-length = 120
select = ["ALL"]
ignore = [
    "ANN101",  # type annotation on self
    "B008",  # typer involves a lot of function calls in function definitions
    "FBT001",  # boolean trap? no documentation
    "FBT003",  # boolean trap? no documentation
    "PLR0913",  # too many arguments to a function call
    "S",  # run full bandit as a commit-hook
    "TCH",  # typechecking blocks break tests
    "W291",  # Don't enforce whitespace, handled in pre-commit
    "TD",  # TODO message formatting
    "FIX",  # allow TODOs
    "FA",
]

[tool.ruff.format]
line-ending = "lf"
quote-style = "double"

[tool.ruff.per-file-ignores]
"neosctl/*"= [
    "D104",  # Ignore public __init__ missing docstring.
]
"neosctl/schema.py" = [
    "D101",  # ignore docstrings on pydantic models
]
"neosctl/services/gateway/schema.py" = [
    "D101",  # ignore docstrings on pydantic models
]
"neosctl/services/iam/schema.py" = [
    "D101",  # ignore docstrings on pydantic models
]
"neosctl/services/registry/schema.py" = [
    "D101",  # ignore docstrings on pydantic models
]
"neosctl/services/storage/storage.py" = [
    "T201",  # allow print in xml based client
]
"tasks.py" = ["ANN", "INP001", "E501", "S"]
"tests/*" = [
    "ANN",  # skip annotation in tests
    "D",  # skip docstrings in tests
    "S101",  # allow assert statements
]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.pydocstyle]
convention = "google"

[tool.pyright]
include = ["neosctl"]
exclude = [
    "tests/*",
]

[tool.poetry.scripts]
neosctl = "neosctl.cli:app"

[build-system]
requires = ["poetry-core>=1.0,<=1.6.2"]
build-backend = "poetry.core.masonry.api"
