from amsdal.schemas.manager import SchemaManager as SchemaManager
from amsdal_models.classes.model import Model
from amsdal_models.schemas.data_models.schema import ObjectSchema, PropertyData
from amsdal_utils.models.data_models.table_schema import NestedSchemaModel, TableColumnSchema, TableSchema

def object_schema_to_table_schema(object_schema: ObjectSchema) -> TableSchema: ...
def _process_properties(properties: dict[str, PropertyData] | None, required: list[str]) -> list[TableColumnSchema]: ...
def _process_property_type(property_type: str, context: dict[str, type | Model | NestedSchemaModel]) -> type | Model | NestedSchemaModel: ...
def schema_to_nested_column_schema(schema: ObjectSchema, context: dict[str, type | Model | NestedSchemaModel]) -> NestedSchemaModel | type: ...
