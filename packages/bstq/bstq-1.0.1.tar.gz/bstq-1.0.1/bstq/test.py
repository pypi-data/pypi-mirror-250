from bstq import *
bst = createBSTWithHeight(4)
print(bst)
printBTree(bst , inverted = True)
# print(inOrder(bst))
# print(postOrder(bst))
# print(preOrder(bst))
# print(height(bst))
# print(printBTree(bst))
# print(isBST(bst))
# print(invertBST(bst))
# print(bstSum(bst))
# print(searchInBST(bst , 10))
# print(diameterOfBST(bst))
# print(topViewOfBST(bst))
# print(deleteNodeInBST(bst , 4))
# print(levelOrder(bst))
# print(levelOrderList(bst))
# print(findDistanceFromRoot(bst , 5))
# ll = (bstToDLL(bst))
# print(ll)
# print(enumerateLinkedList(ll))
# print(kThSmallestNode(bst ,3))
# print(kThLargestNode(bst ,3))
# print(createBSTFromSortedList([i for i in range(1,10)]))
# print(findMinInBST(bst))
# print(findMaxInBST(bst))