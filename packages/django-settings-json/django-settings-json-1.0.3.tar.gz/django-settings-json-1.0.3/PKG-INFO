Metadata-Version: 2.1
Name: django-settings-json
Version: 1.0.3
Summary: Django Settings JSON helps you handle environment variables when can't use them directly from the operational system.
Home-page: https://github.com/andrebr/django-settings-json
Author: Andre Pereira
Author-email: django-settings-json@aper.com.br
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=2.7,<=3.12
Description-Content-Type: text/markdown
License-File: LICENSE

# django-settings-json

Sample `settings.json` file:

```json
{
  "DEBUG": true, 
  "TIME_ZONE": "America/New_York"
}
```

Usage
--

Use `get_setting()` when retrieving environment variables on your `settings.py` file:

```python
from settings_json import get_setting

DEBUG = get_setting('DEBUG')
TIME_ZONE = get_setting('TIME_ZONE')
```

GitIgnore
--

Remember to add `settings.json` into your `.gitignore`, so it don't get tracked.

```
settings.json
```

Missing Variables
--

If you forget to add a variable on your `settings.json`, it'll raise an error like the one below:

`Set the TIME_ZONE environment variable on settings.json`
