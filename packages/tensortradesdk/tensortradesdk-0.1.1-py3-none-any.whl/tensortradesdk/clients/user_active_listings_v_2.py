# Generated by ariadne-codegen
# Source: resources/ariadne_client_configs/user_data.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import DataSource


class UserActiveListingsV2(BaseModel):
    user_active_listings_v_2: "UserActiveListingsV2UserActiveListingsV2" = Field(
        alias="userActiveListingsV2"
    )


class UserActiveListingsV2UserActiveListingsV2(BaseModel):
    page: "UserActiveListingsV2UserActiveListingsV2Page"
    txs: List["UserActiveListingsV2UserActiveListingsV2Txs"]


class UserActiveListingsV2UserActiveListingsV2Page(BaseModel):
    end_cursor: Optional[
        "UserActiveListingsV2UserActiveListingsV2PageEndCursor"
    ] = Field(alias="endCursor")
    has_more: bool = Field(alias="hasMore")


class UserActiveListingsV2UserActiveListingsV2PageEndCursor(BaseModel):
    str: str


class UserActiveListingsV2UserActiveListingsV2Txs(BaseModel):
    tx: "UserActiveListingsV2UserActiveListingsV2TxsTx"


class UserActiveListingsV2UserActiveListingsV2TxsTx(BaseModel):
    tx_id: str = Field(alias="txId")
    tx_at: Any = Field(alias="txAt")
    source: DataSource
    mint_onchain_id: Optional[str] = Field(alias="mintOnchainId")
    gross_amount: Optional[Any] = Field(alias="grossAmount")
