Metadata-Version: 2.1
Name: legend_pydataobj
Version: 1.5.0a3
Summary: LEGEND Python Data Objects
Home-page: https://github.com/legend-exp/legend-pydataobj
Author: The LEGEND Collaboration
Maintainer: The LEGEND Collaboration
License: GPL-3.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Software Development
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: awkward>=2
Requires-Dist: awkward-pandas
Requires-Dist: colorlog
Requires-Dist: h5py>=3.2
Requires-Dist: hdf5plugin
Requires-Dist: numba!=0.53.*,!=0.54.*
Requires-Dist: numexpr
Requires-Dist: numpy>=1.21
Requires-Dist: pandas>=1.4.4
Requires-Dist: parse
Requires-Dist: pint
Requires-Dist: pint-pandas
Provides-Extra: all
Requires-Dist: legend-pydataobj[docs,test]; extra == "all"
Provides-Extra: docs
Requires-Dist: furo; extra == "docs"
Requires-Dist: jupyter; extra == "docs"
Requires-Dist: myst-parser; extra == "docs"
Requires-Dist: nbsphinx; extra == "docs"
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx-copybutton; extra == "docs"
Requires-Dist: sphinx-inline-tabs; extra == "docs"
Provides-Extra: test
Requires-Dist: pre-commit; extra == "test"
Requires-Dist: pylegendtestdata; extra == "test"
Requires-Dist: pytest>=6.0; extra == "test"
Requires-Dist: pytest-cov; extra == "test"

# legend-pydataobj

[![PyPI](https://img.shields.io/pypi/v/legend-pydataobj?logo=pypi)](https://pypi.org/project/legend-pydataobj/)
![GitHub tag (latest by date)](https://img.shields.io/github/v/tag/legend-exp/legend-pydataobj?logo=git)
[![GitHub Workflow Status](https://img.shields.io/github/checks-status/legend-exp/legend-pydataobj/main?label=main%20branch&logo=github)](https://github.com/legend-exp/legend-pydataobj/actions)
[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Codecov](https://img.shields.io/codecov/c/github/legend-exp/legend-pydataobj?logo=codecov)](https://app.codecov.io/gh/legend-exp/legend-pydataobj)
![GitHub issues](https://img.shields.io/github/issues/legend-exp/legend-pydataobj?logo=github)
![GitHub pull requests](https://img.shields.io/github/issues-pr/legend-exp/legend-pydataobj?logo=github)
![License](https://img.shields.io/github/license/legend-exp/legend-pydataobj)
[![Read the Docs](https://img.shields.io/readthedocs/legend-pydataobj?logo=readthedocs)](https://legend-pydataobj.readthedocs.io)

This package provides a Python implementation of the LEGEND Data Objects (LGDO) and I/O
to HDF5, including [Numba](https://numba.pydata.org/)-accelerated custom compression
algorithms for particle detector signals. More documentation is available in the
[LEGEND data format specification](https://legend-exp.github.io/legend-data-format-specs).
