const a=[{type:"page",$component:{src:"src/routes/[...404].tsx?pick=default&pick=$css",build:()=>import("../_...404_.js"),import:()=>import("../_...404_.js")},path:"/*404",filePath:"/home/vemonet/dev/llm/libre-chat/frontend/src/routes/[...404].tsx"},{type:"page",$component:{src:"src/routes/about.tsx?pick=default&pick=$css",build:()=>import("../about.js"),import:()=>import("../about.js")},path:"/about",filePath:"/home/vemonet/dev/llm/libre-chat/frontend/src/routes/about.tsx"},{type:"page",$component:{src:"src/routes/index.tsx?pick=default&pick=$css",build:()=>import("../index.js"),import:()=>import("../index.js")},path:"/",filePath:"/home/vemonet/dev/llm/libre-chat/frontend/src/routes/index.tsx"}],g=f(a.filter(s=>s.type==="page")),h=m(a.filter(s=>s.type==="api"));function x(s,n){const e=s.split("/").filter(Boolean);e:for(const t of h){const o=t.matchSegments;if(e.length<o.length||!t.wildcard&&e.length>o.length)continue;for(let i=0;i<o.length;i++){const l=o[i];if(l&&e[i]!==l)continue e}const r=t[`$${n}`];if(r==="skip"||r===void 0)return;const c={};for(const{type:i,name:l,index:p}of t.params)i===":"?c[l]=e[p]:c[l]=e.slice(p).join("/");return{handler:r,params:c}}}function f(s){function n(e,t,o,r){const c=Object.values(e).find(i=>o.startsWith(i.id+"/"));return c?(n(c.children||(c.children=[]),t,o.slice(c.id.length)),e):(e.push({...t,id:o,path:o.replace(/\/\([^)/]+\)/g,"")}),e)}return s.sort((e,t)=>e.path.length-t.path.length).reduce((e,t)=>n(e,t,t.path,t.path),[])}function m(s){return s.flatMap(n=>u(n.path).map(t=>({...n,path:t}))).map(d).sort((n,e)=>e.score-n.score)}function u(s){let n=/(\/?\:[^\/]+)\?/.exec(s);if(!n)return[s];let e=s.slice(0,n.index),t=s.slice(n.index+n[0].length);const o=[e,e+=n[1]];for(;n=/^(\/\:[^\/]+)\?/.exec(t);)o.push(e+=n[1]),t=t.slice(n[0].length);return u(t).reduce((r,c)=>[...r,...o.map(i=>i+c)],[])}function d(s){const n=s.path.split("/").filter(Boolean),e=[],t=[];let o=0,r=!1;for(const[c,i]of n.entries())if(i[0]===":"){const l=i.slice(1);o+=3,e.push({type:":",name:l,index:c}),t.push(null)}else i[0]==="*"?(o-=1,e.push({type:"*",name:i.slice(1),index:c}),r=!0):(o+=4,i.match(/^\(.+\)$/)||t.push(i));return{...s,score:o,params:e,matchSegments:t,wildcard:r}}export{x as m,g as p};
