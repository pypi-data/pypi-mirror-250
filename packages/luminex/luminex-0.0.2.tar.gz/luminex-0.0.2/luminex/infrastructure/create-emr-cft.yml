# /*
# * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# *
# * Permission is hereby granted, free of charge, to any person obtaining a copy of this
# * software and associated documentation files (the "Software"), to deal in the Software
# * without restriction, including without limitation the rights to use, copy, modify,
# * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# * permit persons to whom the Software is furnished to do so.
# *
# * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# */

AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template for accepting portfolio share.
             ### Before deployment please make sure that all parameters are reviewed and updated according the specific use case. ###'

Parameters:
  # # Do not include parameter this in template parameter files
  # ProductRepoName:
  #   Description: Please specify the product repo name
  #   Type: String
  EMRApplications:
    Type: String # CommaDelimitedList
    Description: The applications to install on this cluster, for example, Spark, Flink, Oozie, Zeppelin, and so on. Please use the correct letter case, e.g. TensorFlow, Spark instead of tensorflow, spark. 
  EMRReleaseLabel:
    Description: "The EMR Release"
    Type: String
  EMRSubnetId:
    Description: "The subnet for the EMR Cluster"
    Type: String  
  EMRTerminationProtected:
    Description: "Protect your EC2 instances from accidental termination"
    Type: String  
  EMRClusterName:
    Description: The name of the EMR Cluster
    Type: String 
  EMRCustomAmiId:
    Description: The custom AMI Id for Operating Systems
    Type: String
  EMRClusterConfiguration:
    Description: The EMR Configuration you would like to choose (Instance groups or Instance fleets)
    Type: String
    AllowedValues:
      - instance_group
      - instance_fleet
    ConstraintDescription: Please specify instance_group or instance_fleet.
  EMRTagKey1:
    Description: The key of the Tag
    Type: String
  EMRTagValue1:
    Description: The value of the Tag
    Type: String
  EMRTagKey2:
    Description: The key of the Tag
    Type: String
  EMRTagValue2:
    Description: The value of the Tag
    Type: String
  EMRTagKey3:
    Description: The key of the Tag
    Type: String
  EMRTagValue3:
    Description: The value of the Tag
    Type: String
  EMRVisibleToAllUsers:
    Description: Indicates whether the cluster is visible to all IAM users of the AWS account
    Type: String
  EMRStepConcurrencyLevel:
    Description: Specifies the number of steps that can be executed concurrently
    Type: Number
    MinValue: 1
    MaxValue: 256
  EMRSecurityConfiguration:
    Description: The name of the security configuration applied to the cluster.
    Type: String
  EMRIdealTimeOut:
    Description: The time the cluster should get automatically terminated
    Type: Number
  EMRBootstrapActionsName:
    Description: The name of the BootstapAction Name
    Type: String
  EMRBootstrapActionsScriptS3Path:
    Description: The s3 path where the Bootstrap file is present
    Type: String
  EMRConfigurationsScriptS3Path:
    Type: String
    Description: The path to the Amazon S3 location where the configurations script is stored.
  EMREbsRootVolumeSize:
    Type: Number
    Description: The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance. Available in Amazon EMR releases 4.x and later.
  EMRCoreInstanceGroupName:
    Type: String
    Description: Friendly name given to the core instance group.
  EMRCoreInstanceGroupInstanceCount:
    Type: Number
    Description: Target number of instances for the core instance group.
  EMRCoreInstanceGroupInstanceType:
    Type: String
    Description: The Amazon EC2 instance type for all instances in the core instance group.
  EMRCoreInstanceGroupMarket:
    Type: String
    Description: Market type of the Amazon EC2 instances used to create a core cluster node.
  EMRMasterInstanceGroupName:
    Type: String
    Description: Friendly name given to the master instance group.
  EMRMasterInstanceGroupInstanceCount:
    Type: Number
    Description: Target number of instances for the master instance group.
  EMRMasterInstanceGroupInstanceType:
    Type: String
    Description: The Amazon EC2 instance type for all instances in the master instance group.
  EMRMasterInstanceGroupMarket:
    Type: String
    Description: Market type of the Amazon EC2 instances used to create a master cluster node.
  EMRTaskInstanceGroupName:
    Type: String
    Description: Friendly name given to the master task group.
  EMRTaskInstanceGroupInstanceCount:
    Type: Number
    Description: Target number of instances for the task instance group.
  EMRTaskInstanceGroupInstanceType:
    Type: String
    Description: The Amazon EC2 instance type for all instances in the task instance group.
  EMRTaskInstanceGroupMarket:
    Type: String
    Description: Market type of the Amazon EC2 instances used to create a task cluster node.
  EMRAutoScalingRole:
    Type: String
    Description: An IAM role for automatic scaling policies. The default role is EMR_AutoScaling_DefaultRole. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate Amazon EC2 instances in an instance group.
  # EMRStepsScriptS3Path:
  #   Type: String
  #   Description: The path to the Amazon S3 location where the step script is stored.
  #   Default: s3://devhap/steps/steps-test.yaml
  EMRMaximumCapacityUnits:
    Type: Number
    Description: The upper boundary of Amazon EC2 units. The limit only applies to the core and task nodes.
  EMRMaximumCoreCapacityUnits:
    Type: Number
    Description: The upper boundary of Amazon EC2 units for core node type in a cluster
  EMRMaximumOnDemandCapacityUnits:
    Type: Number
    Description: The upper boundary of On-Demand Amazon EC2 units.
  EMRMinimumCapacityUnits:
    Type: Number
    Description: The lower boundary of Amazon EC2 units.
  EMRUnitType:
    Type: String
    Description: The unit type used for specifying a managed scaling policy.
    AllowedValues:
      - InstanceFleetUnits
      - Instances
      - VCPU
  SagemakerStudioSecurityGroupId: # This can be hardcoded by DevOps Admin
    Type: String
    Description: Security group id.
  SagemakerStudioSubnetId:  # This can be hardcoded by DevOps Admin
    Type: String
    Description: Subnet id.
  SageMakerProjectId:
    Type: String
    Description: Service generated Id of the project.
  SageMakerProjectName:
    Type: String
    Description: Name of the project

Conditions:
  ShouldUseInstanceFleet: !Equals
    - !Ref EMRClusterConfiguration
    - instance_fleet
  ShouldUseInstanceGroup: !Equals
    - !Ref EMRClusterConfiguration
    - instance_group
  Flink: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Flink, !Ref EMRApplications]]
  Ganglia: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Ganglia, !Ref EMRApplications]]
  HBase: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [HBase, !Ref EMRApplications]]
  HCatalog: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [HCatalog, !Ref EMRApplications]]
  Hadoop: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Hadoop, !Ref EMRApplications]]
  Hive: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Hive, !Ref EMRApplications]]
  Hue: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Hue, !Ref EMRApplications]]
  JupyterEnterpriseGateway: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [JupyterEnterpriseGateway, !Ref EMRApplications]]
  JupyterHub: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [JupyterHub, !Ref EMRApplications]]
  Livy: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Livy, !Ref EMRApplications]]
  MXNet: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [MXNet, !Ref EMRApplications]]
  Oozie: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Oozie, !Ref EMRApplications]]
  Phoenix: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Phoenix, !Ref EMRApplications]]
  Pig: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Pig, !Ref EMRApplications]]
  Presto: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Presto, !Ref EMRApplications]]
  Spark: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Spark, !Ref EMRApplications]]
  Sqoop: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Sqoop, !Ref EMRApplications]]
  TensorFlow: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [TensorFlow, !Ref EMRApplications]]
  Tez: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Tez, !Ref EMRApplications]]
  Trino: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Trino, !Ref EMRApplications]]
  Zeppelin: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [Zeppelin, !Ref EMRApplications]]
  ZooKeeper: !Not
    - !Equals
      - !Ref EMRApplications
      - !Select [0, !Split [ZooKeeper, !Ref EMRApplications]]

Resources:
#Please add your template resources below this line
  EMRClusterWithInstanceFleet:
    Type: AWS::EMR::Cluster
    Condition: ShouldUseInstanceFleet
    Properties:
      Applications:
      - !If [Flink, Name: Flink, !Ref AWS::NoValue]
      - !If [Ganglia, Name: Ganglia, !Ref AWS::NoValue]
      - !If [HBase, Name: HBase, !Ref AWS::NoValue]
      - !If [HCatalog, Name: HCatalog, !Ref AWS::NoValue]
      - !If [Hadoop, Name: Hadoop, !Ref AWS::NoValue]
      - !If [Hive, Name: Hive, !Ref AWS::NoValue]
      - !If [Hue, Name: Hue, !Ref AWS::NoValue]
      - !If [JupyterEnterpriseGateway, Name: JupyterEnterpriseGateway, !Ref AWS::NoValue]
      - !If [JupyterHub, Name: JupyterHub, !Ref AWS::NoValue]
      - !If [Livy, Name: Livy, !Ref AWS::NoValue]
      - !If [MXNet, Name: MXNet, !Ref AWS::NoValue]
      - !If [Oozie, Name: Oozie, !Ref AWS::NoValue]
      - !If [Phoenix, Name: Phoenix, !Ref AWS::NoValue]
      - !If [Pig, Name: Pig, !Ref AWS::NoValue]
      - !If [Presto, Name: Presto, !Ref AWS::NoValue]
      - !If [Spark, Name: Spark, !Ref AWS::NoValue]
      - !If [Sqoop, Name: Sqoop, !Ref AWS::NoValue]
      - !If [TensorFlow, Name: TensorFlow, !Ref AWS::NoValue]
      - !If [Tez, Name: Tez, !Ref AWS::NoValue]
      - !If [Trino, Name: Trino, !Ref AWS::NoValue]
      - !If [Zeppelin, Name: Zeppelin, !Ref AWS::NoValue]
      - !If [ZooKeeper, Name: ZooKeeper, !Ref AWS::NoValue]
      AutoTerminationPolicy:
        IdleTimeout: !Ref EMRIdealTimeOut
      BootstrapActions:
        - Name: !Ref EMRBootstrapActionsName
          ScriptBootstrapAction:
            Path: !Ref EMRBootstrapActionsScriptS3Path
      Fn::Transform:
        Name: 'AWS::Include'
        Parameters:
          Location: !Ref EMRConfigurationsScriptS3Path
      CustomAmiId: !Ref EMRCustomAmiId
      EbsRootVolumeSize: !Ref EMREbsRootVolumeSize
      Instances:
        MasterInstanceFleet:
          Name: cfnMaster
          TargetOnDemandCapacity: 1
          TargetSpotCapacity: 0
          InstanceTypeConfigs:
            - InstanceType: !Ref EMRCoreInstanceGroupInstanceType
              WeightedCapacity: 1
        CoreInstanceFleet:
          Name: cfnCore
          TargetOnDemandCapacity: 1
          TargetSpotCapacity: 0
          InstanceTypeConfigs:
            - InstanceType: !Ref EMRCoreInstanceGroupInstanceType
              WeightedCapacity: 1
        TaskInstanceFleets:
          - Name: cfnTask
            TargetOnDemandCapacity: 1
            TargetSpotCapacity: 0
            InstanceTypeConfigs:
              - InstanceType: !Ref EMRCoreInstanceGroupInstanceType
                WeightedCapacity: 1
        TerminationProtected: !Ref EMRTerminationProtected
        Ec2SubnetId: !Ref EMRSubnetId
      JobFlowRole: !Ref EMREC2InstanceProfile
      ManagedScalingPolicy:
        ComputeLimits:
          MaximumCapacityUnits: !Ref EMRMaximumCapacityUnits
          MaximumCoreCapacityUnits: !Ref EMRMaximumCoreCapacityUnits
          MaximumOnDemandCapacityUnits: !Ref EMRMaximumOnDemandCapacityUnits
          MinimumCapacityUnits: !Ref EMRMinimumCapacityUnits
          UnitType: !Ref EMRUnitType
      Name: !Ref EMRClusterName
      ReleaseLabel: !Ref EMRReleaseLabel
      SecurityConfiguration: !Ref EMRSecurityConfiguration
      ServiceRole: !Ref EMREC2Role
      StepConcurrencyLevel: !Ref EMRStepConcurrencyLevel
      Tags:
        - Key: !Ref EMRTagKey1
          Value: !Ref EMRTagValue1
        - Key: !Ref EMRTagKey2
          Value: !Ref EMRTagValue2
        - Key: !Ref EMRTagKey3
          Value: !Ref EMRTagValue3
      VisibleToAllUsers: !Ref EMRVisibleToAllUsers

  EMRClusterWithInstanceGroup:
    Type: AWS::EMR::Cluster
    Condition: ShouldUseInstanceGroup
    Properties:
      Applications:
      - !If [Flink, Name: Flink, !Ref AWS::NoValue]
      - !If [Ganglia, Name: Ganglia, !Ref AWS::NoValue]
      - !If [HBase, Name: HBase, !Ref AWS::NoValue]
      - !If [HCatalog, Name: HCatalog, !Ref AWS::NoValue]
      - !If [Hadoop, Name: Hadoop, !Ref AWS::NoValue]
      - !If [Hive, Name: Hive, !Ref AWS::NoValue]
      - !If [Hue, Name: Hue, !Ref AWS::NoValue]
      - !If [JupyterEnterpriseGateway, Name: JupyterEnterpriseGateway, !Ref AWS::NoValue]
      - !If [JupyterHub, Name: JupyterHub, !Ref AWS::NoValue]
      - !If [Livy, Name: Livy, !Ref AWS::NoValue]
      - !If [MXNet, Name: MXNet, !Ref AWS::NoValue]
      - !If [Oozie, Name: Oozie, !Ref AWS::NoValue]
      - !If [Phoenix, Name: Phoenix, !Ref AWS::NoValue]
      - !If [Pig, Name: Pig, !Ref AWS::NoValue]
      - !If [Presto, Name: Presto, !Ref AWS::NoValue]
      - !If [Spark, Name: Spark, !Ref AWS::NoValue]
      - !If [Sqoop, Name: Sqoop, !Ref AWS::NoValue]
      - !If [TensorFlow, Name: TensorFlow, !Ref AWS::NoValue]
      - !If [Tez, Name: Tez, !Ref AWS::NoValue]
      - !If [Trino, Name: Trino, !Ref AWS::NoValue]
      - !If [Zeppelin, Name: Zeppelin, !Ref AWS::NoValue]
      - !If [ZooKeeper, Name: ZooKeeper, !Ref AWS::NoValue]
      AutoScalingRole: !Ref EMRAutoScalingRole
      LogUri: s3://luminex-application-files/emr-logs/
      AutoTerminationPolicy:
        IdleTimeout: !Ref EMRIdealTimeOut
      BootstrapActions:
        - Name: !Ref EMRBootstrapActionsName
          ScriptBootstrapAction:
            Path: !Ref EMRBootstrapActionsScriptS3Path
      Fn::Transform:
        Name: 'AWS::Include'
        Parameters:
          Location: !Ref EMRConfigurationsScriptS3Path
      CustomAmiId: !Ref EMRCustomAmiId
      EbsRootVolumeSize: !Ref EMREbsRootVolumeSize
      Instances:
        MasterInstanceGroup:
          InstanceCount: !Ref EMRMasterInstanceGroupInstanceCount
          InstanceType: !Ref EMRMasterInstanceGroupInstanceType
          Market: !Ref EMRMasterInstanceGroupMarket
          Name: !Ref EMRMasterInstanceGroupName
          EbsConfiguration:
            EbsBlockDeviceConfigs:
              - VolumeSpecification:
                  VolumeType: gp2
                  SizeInGB: 32
                VolumesPerInstance: 1
            EbsOptimized: true
        CoreInstanceGroup:
          InstanceCount: !Ref EMRCoreInstanceGroupInstanceCount
          InstanceType: !Ref EMRCoreInstanceGroupInstanceType
          Market: !Ref EMRCoreInstanceGroupMarket
          Name: !Ref EMRCoreInstanceGroupName
          EbsConfiguration:
            EbsBlockDeviceConfigs:
              - VolumeSpecification:
                  VolumeType: gp2
                  SizeInGB: 32
                VolumesPerInstance: 1
            EbsOptimized: true
        TaskInstanceGroups:
          - InstanceCount: !Ref EMRTaskInstanceGroupInstanceCount
            InstanceType: !Ref EMRTaskInstanceGroupInstanceType
            Market: !Ref EMRTaskInstanceGroupMarket
            Name: !Ref EMRTaskInstanceGroupName
        TerminationProtected: !Ref EMRTerminationProtected
        Ec2SubnetId: !Ref EMRSubnetId
      JobFlowRole: !Ref EMREC2InstanceProfile
      ManagedScalingPolicy:
        ComputeLimits:
          MaximumCapacityUnits: !Ref EMRMaximumCapacityUnits
          MaximumCoreCapacityUnits: !Ref EMRMaximumCoreCapacityUnits
          MaximumOnDemandCapacityUnits: !Ref EMRMaximumOnDemandCapacityUnits
          MinimumCapacityUnits: !Ref EMRMinimumCapacityUnits
          UnitType: !Ref EMRUnitType
      Name: !Ref EMRClusterName
      ReleaseLabel: !Ref EMRReleaseLabel
      SecurityConfiguration: !Ref EMRSecurityConfiguration
      ServiceRole: !Ref EMREC2Role
      StepConcurrencyLevel: !Ref EMRStepConcurrencyLevel
      Tags:
        - Key: !Ref EMRTagKey1
          Value: !Ref EMRTagValue1
        - Key: !Ref EMRTagKey2
          Value: !Ref EMRTagValue2
        - Key: !Ref EMRTagKey3
          Value: !Ref EMRTagValue3
      VisibleToAllUsers: !Ref EMRVisibleToAllUsers

  # EMRClusterSteps1:
  #   Type: AWS::EMR::Step
  #   Properties:
  #     ActionOnFailure: CONTINUE
  #     HadoopJarStep:
  #       Jar: command-runner.jar
  #       Args:
  #         - spark-submit
  #         - s3://luminex/steps/transformation-script-s3.py  # Replace with your Python script on S3
  #     JobFlowId: !Ref EMRClusterWithInstanceGroup
  #     Name: Run a script from S3

  EMREC2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "StackSet-${AWS::StackName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - elasticmapreduce.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/AWSServiceCatalogAdminFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess

  EMREC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${EMREC2Role}_instanceprofile
      Path: /
      Roles:
        - !Ref EMREC2Role

# Add this section at the end of your CloudFormation template
Outputs:
  EMRClusterIdOutput:
    Description: "EMR Cluster ID"
    Value: !Sub |
      ${EMRClusterWithInstanceGroup}
    Condition: ShouldUseInstanceGroup
