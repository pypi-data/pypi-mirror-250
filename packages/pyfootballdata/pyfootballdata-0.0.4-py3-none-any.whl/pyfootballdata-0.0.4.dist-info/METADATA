Metadata-Version: 2.1
Name: pyfootballdata
Version: 0.0.4
Summary: A companion client for the football-data.org API
Author-email: Serhii Kovalenko <cmajorsmith@gmail.com>
Project-URL: Homepage, https://github.com/cmajsmith/pyfootballdata
Project-URL: Issues, https://github.com/cmajsmith/pyfootballdata/issues
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE

# pyfootballdata

A Python client for [football-data.org](football-data.org) API.

# Installation
```bash
pip install pyfootballdata
```
# Usage
```python
# Step 1: import the package
from pyfootballdata import FootballData

# Step 2: initialize the client (can be `async`)
fd = FootballData('YOUR_API_KEY') 

# Step 3: query the data 
# (e.g. standings for EPL circa 2021)
epl_standings = fd.standings(competition=2021, season=2021)
sorted_by_goals_conceded = epl_standings.overall.sort_by(
    key="goals_against", direction="desc"
)
worst_defense = sorted_by_goals_conceded[0]

print(worst_defense.team.name, worst_defense.goals_against) # Norwich City FC 84
```
# Documentation
TBA
# Examples
TBA
