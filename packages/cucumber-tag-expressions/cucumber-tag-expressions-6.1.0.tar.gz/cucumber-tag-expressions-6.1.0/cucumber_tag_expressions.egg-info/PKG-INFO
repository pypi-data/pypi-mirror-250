Metadata-Version: 2.1
Name: cucumber-tag-expressions
Version: 6.1.0
Summary: Provides a tag-expression parser and evaluation logic for cucumber/behave
Home-page: https://github.com/cucumber/tag-expressions
Download-URL: https://pypi.org/project/cucumber-tag-expressions
Author: Jens Engel
Author-email: jenisys@noreply.github.com
License: MIT
Keywords: BDD,testing,cucumber,tag-expressions,behave
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: BSD License
Requires-Python: >=2.7
Requires-Dist: enum34; python_version < "3.4"
Provides-Extra: develop
Requires-Dist: coverage; extra == "develop"
Requires-Dist: pytest<7.5; python_version < "3.0" and extra == "develop"
Requires-Dist: pytest>=5.0; python_version >= "3.0" and extra == "develop"
Requires-Dist: pytest-html<4.2,>=4; python_version < "3.0" and extra == "develop"
Requires-Dist: pytest-html>=2.0; python_version >= "3.0" and extra == "develop"
Requires-Dist: tox<4.12,>=4.11; extra == "develop"
Requires-Dist: pylint; extra == "develop"
Requires-Dist: ruff; extra == "develop"
Requires-Dist: invoke>=1.7.3; extra == "develop"
Requires-Dist: six>=1.16.0; extra == "develop"
Requires-Dist: path>=13.1.0; python_version >= "3.5" and extra == "develop"
Requires-Dist: path.py>=11.5.0; python_version < "3.5" and extra == "develop"
Requires-Dist: pathlib; python_version <= "3.4" and extra == "develop"
Requires-Dist: backports.shutil_which; python_version <= "3.3" and extra == "develop"
Requires-Dist: pycmd; extra == "develop"

.. image:: https://github.com/cucumber/tag-expressions/actions/workflows/test-python.yml/badge.svg
    :target: https://github.com/cucumber/tag-expressions/actions/workflows/test-python.yml
    :alt: CI Build Status

.. image:: https://img.shields.io/pypi/v/cucumber-tag-expressions.svg
    :target: https://pypi.python.org/pypi/cucumber-tag-expressions
    :alt: Latest Version

.. image:: https://img.shields.io/pypi/l/cucumber-tag-expressions.svg
    :target: https://pypi.python.org/pypi/cucumber-tag-expressions/
    :alt: License

.. |logo| image:: https://github.com/cucumber-ltd/brand/raw/master/images/png/notm/cucumber-black/cucumber-black-128.png

Cucumber tag-expressions for Python.

|logo|

Cucumber tag-expressions provide readable boolean expressions
to select features and scenarios marked with tags in Gherkin files
in an easy way::

    # -- SIMPLE TAG-EXPRESSION EXAMPLES:
    @a and @b
    @a or  @b
    not @a

    # -- MORE TAG-EXPRESSION EXAMPLES:
    @a and not @b
    (@a or @b) and not @c

SEE ALSO:

* https://cucumber.io/docs/cucumber/api/#tag-expressions


EXAMPLE:
-----------------------------------------------------------------

A cucumber test runner selects some scenarios by using tag-expressions and runs them:

.. code:: sh

    # -- TAG-EXPRESSION: @one and @two
    # EXPECTED: Selects and runs scenario "Three".
    $ my_cucumber_test_runner --tags="@one and @two" features/example.feature
    ...

    # -- TAG-EXPRESSION: @one or @two
    # EXPECTED: Selects and runs scenarios "One", "Two" and "Three".
    $ my_cucumber_test_runner --tags="@one or @two" features/example.feature
    ...

by using the following feature file:

.. code:: gherkin

    # -- FILE: features/example.feature
    Feature: Tag-Expressions Example

      @one
      Scenario: One
        Given a step passes

      @two
      Scenario: Two
        Given another step passes

      @one @two
      Scenario: Three
        Given some step passes

      Scenario: Four
        Given another step passes
