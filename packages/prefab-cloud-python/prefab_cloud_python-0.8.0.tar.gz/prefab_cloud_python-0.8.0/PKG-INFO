Metadata-Version: 2.1
Name: prefab-cloud-python
Version: 0.8.0
Summary: Python client for Prefab Feature Flags, Dynamic log levels, and Config as a Service: https://www.prefab.cloud
Home-page: https://www.prefab.cloud
License: MIT
Author: Michael Berkowitz
Author-email: michael.berkowitz@gmail.com
Maintainer: Michael Berkowitz
Maintainer-email: michael.berkowitz@gmail.com
Requires-Python: >=3.9,<4
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: grpcio (>=1.48.4)
Requires-Dist: mmh3 (>=3.0.0,<4.0.0)
Requires-Dist: pyyaml (>=6.0.0,<7.0.0)
Requires-Dist: requests (>=2.28.0,<3.0.0)
Requires-Dist: sseclient-py (>=1.7.2,<2.0.0)
Requires-Dist: structlog (>=22.3,<23.0)
Project-URL: Documentation, https://docs.prefab.cloud/docs/python-sdk/python
Project-URL: Repository, https://github.com/prefab-cloud/prefab-cloud-python
Description-Content-Type: text/markdown

# prefab-cloud-python

Python client for prefab.cloud, providing Config, FeatureFlags as a Service

**Note: This library is under active development**

[Sign up to be notified about updates](https://forms.gle/2qsjMFvjGnkTnA9T8)

## Example usage

```python
from prefab_cloud_python import Client, Options

options = Options(
    prefab_api_key="your-prefab-api-key"
)

context = {
  "user": {
    "team_id": 432,
    "id": 123,
    "subscription_level": 'pro',
    "email": "alice@example.com"
  }
}

client = Client(options)

result = client.enabled("my-first-feature-flag", context=context)

print("my-first-feature-flag is:", result)
```

See full documentation https://docs.prefab.cloud/docs/sdks/python

