{"version":3,"file":"lib_index_js.07189b54d37eecc2f2a0.js","mappings":"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","sources":["webpack://cell_toolbar/./src/index.ts","webpack://cell_toolbar/./style/index.css","webpack://cell_toolbar/./style/index.css?0140"],"sourcesContent":["// Import necessary dependencies from React, JupyterLab, and other modules\r\nimport * as React from 'react';\r\nimport { ReactWidget } from '@jupyterlab/apputils';\r\nimport { JupyterFrontEnd, JupyterFrontEndPlugin } from '@jupyterlab/application';\r\nimport { INotebookTracker, NotebookPanel, NotebookActions } from '@jupyterlab/notebook';\r\nimport { ICellFooter, Cell } from '@jupyterlab/cells';\r\nimport { ReadonlyPartialJSONObject } from '@lumino/coreutils';\r\nimport { CommandRegistry } from '@lumino/commands';\r\nimport { IEditorServices } from '@jupyterlab/codeeditor';\r\nimport { OutputArea, OutputAreaModel } from '@jupyterlab/outputarea';\r\nimport { RenderMimeRegistry } from '@jupyterlab/rendermime';\r\nimport { ToolbarButton } from '@jupyterlab/apputils';\r\n\r\nimport '../style/index.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\n\r\n// Define CSS classes used in the cell footer.\r\nconst CSS_CLASSES = {\r\n  CELL_FOOTER: 'jp-CellFooter',\r\n  CELL_FOOTER_DIV: 'ccb-cellFooterContainer',\r\n  CELL_FOOTER_BUTTON: 'ccb-cellFooterBtn',\r\n  CELL_TOGGLE_BUTTON: '.ccb-toggleBtn',\r\n  CUSTOM_OUTPUT_AREA: 'custom-output-area', \r\n};\r\n\r\n// Define command constants\r\nconst COMMANDS = {\r\n  HIDE_CELL_CODE: 'hide-cell-code',\r\n  SHOW_CELL_CODE: 'show-cell-code',\r\n  RUN_SELECTED_CODECELL: 'run-selected-codecell',\r\n  CLEAR_SELECTED_OUTPUT: 'clear-output-cell',\r\n};\r\n\r\n// Define a type for Jupyter metadata\r\ntype JupyterMetadata = {\r\n  source_hidden?: boolean;  \r\n};\r\n\r\n//New function to add a toggle button for explanatory content\r\nfunction addExplanatoryContentToggleButton(panel: NotebookPanel): void {\r\n  let button = new ToolbarButton({\r\n    className: 'toggle-explanatory-content',\r\n    iconClass: 'fa fa-book',\r\n    onClick: () => toggleExplanatoryContent(panel),\r\n    tooltip: 'Toggle Explanatory Content'\r\n  });\r\n\r\n  panel.toolbar.insertItem(10, 'toggleExplanatoryContent', button);\r\n}\r\n\r\nfunction toggleExplanatoryContent(panel: NotebookPanel): void {\r\n  panel.content.widgets.forEach((cell) => {\r\n    if (cell.model.type === 'markdown') {\r\n      let metadata = cell.model.metadata;\r\n      const isExplanatory = metadata['explanatory'] === true;\r\n      if (isExplanatory) {\r\n        cell.node.classList.add('explanatory-cell'); // Add custom class\r\n        let jupyterMetadata = (metadata['jupyter'] as JupyterMetadata) || {};\r\n        let sourceHidden = jupyterMetadata['source_hidden'] || false;\r\n\r\n        // Ensure 'jupyter' metadata exists\r\n        if (!('jupyter' in metadata)) {\r\n          metadata['jupyter'] = {};\r\n        }\r\n\r\n        // Initialize sourceHidden to true if it's not defined\r\n        if (typeof sourceHidden !== 'boolean') {\r\n          sourceHidden = true;\r\n          jupyterMetadata['source_hidden'] = sourceHidden;\r\n        }\r\n\r\n        // Log the value of sourceHidden before toggling\r\n        console.log('Before toggling: sourceHidden =', sourceHidden);\r\n\r\n        // Toggle the visibility based on the current 'sourceHidden'\r\n        if (cell.isHidden == true ){\r\n          cell.show();\r\n        } else {\r\n          cell.hide();\r\n        };\r\n\r\n        // Toggle the 'source_hidden' metadata\r\n        jupyterMetadata['source_hidden'] = !sourceHidden;\r\n\r\n        // Update the cell's metadata with the modified 'jupyter' metadata\r\n        metadata['jupyter'] = jupyterMetadata;\r\n\r\n        // Log the updated value of sourceHidden\r\n        console.log('After toggling: sourceHidden =', !sourceHidden);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n// Function to activate custom commands\r\nfunction activateCommands(app: JupyterFrontEnd, tracker: INotebookTracker): Promise<void> {\r\n  // Output a message to the console to indicate activation\r\n  console.log('JupyterLab extension jupyterlab-aaVisualPolish is activated!');\r\n\r\n  // Wait for the app to be restored before proceeding\r\n  Promise.all([app.restored]).then(([params]) => {\r\n    const { commands, shell } = app;\r\n\r\n    // Function to get the current NotebookPanel\r\n    function getCurrent(args: ReadonlyPartialJSONObject): NotebookPanel | null {\r\n      const widget = tracker.currentWidget;\r\n      const activate = args.activate !== false;\r\n\r\n      if (activate && widget) {\r\n        shell.activateById(widget.id);\r\n      }\r\n\r\n      return widget;\r\n    }\r\n\r\n    /**\r\n    * Function to check if the command should be enabled.\r\n    * It checks if there is a current notebook widget and if it matches the app's current widget.\r\n    * If both conditions are met, the command is considered enabled.\r\n    */\r\n    function isEnabled(): boolean {\r\n      return (\r\n        tracker.currentWidget !== null &&\r\n        tracker.currentWidget === app.shell.currentWidget\r\n      );\r\n    }\r\n\r\n    // Define a command to hide the code in the current cell\r\n    commands.addCommand(COMMANDS.HIDE_CELL_CODE, {\r\n      label:'Hide Cell',\r\n      execute: args => {\r\n        const current = getCurrent(args);\r\n        if (current) {\r\n          const { content } = current;\r\n          NotebookActions.hideCode(content);\r\n        }\r\n      },\r\n      isEnabled\r\n    });\r\n\r\n    // Define a command to show the code in the current cell\r\n    commands.addCommand(COMMANDS.SHOW_CELL_CODE , {\r\n      label: 'Show Cell',\r\n      execute: args => {\r\n        const current = getCurrent(args);\r\n        if (current) {\r\n          const { content } = current;\r\n          NotebookActions.showCode(content);\r\n        }\r\n      },\r\n      isEnabled\r\n    });\r\n\r\n    // Define a command to run the code in the current cell\r\n    commands.addCommand(COMMANDS.RUN_SELECTED_CODECELL, {\r\n      label: 'Run Cell',\r\n      execute: args => {\r\n        const current = getCurrent(args);\r\n        if (current) {\r\n          const { context, content } = current;\r\n          NotebookActions.run(content, context.sessionContext);          \r\n        }\r\n      },\r\n      isEnabled\r\n    });\r\n\r\n    commands.addCommand(COMMANDS.CLEAR_SELECTED_OUTPUT, {\r\n      label: 'Clear Output',\r\n      execute: args => {\r\n        const current = getCurrent(args);\r\n        if (current) {\r\n          const { content } = current;\r\n          NotebookActions.clearOutputs(content);\r\n        }\r\n      },\r\n      isEnabled\r\n    });\r\n  });\r\n\r\n  //Event listener to collapse code cells when a notebook is loaded\r\n  tracker.widgetAdded.connect((sender, panel) => {\r\n    function collapseAllCodeCells(panel: NotebookPanel) {\r\n      const { content } = panel;\r\n      const cells = content.widgets;\r\n      cells.forEach(cell => {\r\n        if (cell.model.type === 'code') {\r\n          NotebookActions.hideAllCode(panel.content);\r\n        }\r\n      });\r\n    }  \r\n    // Function to handle initial setup of Markdown cells\r\n    function setupMarkdownCells(panel: NotebookPanel) {\r\n      const { content } = panel;\r\n      const cells = content.widgets;\r\n      cells.forEach(cell => {\r\n        if (cell.model.type === 'markdown') {\r\n          let metadata = cell.model.metadata;\r\n          const isExplanatory = metadata['explanatory'] === true;\r\n          if (isExplanatory) {\r\n            // Set 'source_hidden' to true in 'jupyter' metadata\r\n            cell.node.classList.add('explanatory-cell'); // Add custom class\r\n            let jupyterMetadata = (metadata['jupyter'] as JupyterMetadata) || {};\r\n            metadata['jupyter'] = { ...jupyterMetadata, source_hidden: true };\r\n    \r\n            // Explicitly hide the cell if it is explanatory\r\n            cell.hide();\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n\r\n    // Collapse code cells when the current notebook is loaded\r\n    panel.context.ready.then(() => {\r\n      collapseAllCodeCells(panel);  \r\n      setupMarkdownCells(panel);  \r\n    });\r\n\r\n    addExplanatoryContentToggleButton(panel);  \r\n});\r\n\r\nreturn Promise.resolve();\r\n}\r\n\r\n/**\r\n * Extend the default implementation of an `IContentFactory`.\r\n */\r\nexport class ContentFactoryWithFooterButton extends NotebookPanel.ContentFactory {\r\n  constructor(commands: CommandRegistry, options: Cell.ContentFactory.IOptions) {\r\n    super(options);\r\n    this.commands = commands;\r\n  }\r\n  /**\r\n   * Create a new cell header for the parent widget.\r\n   */\r\n  createCellFooter(): ICellFooter {\r\n    return new CellFooterWithButton(this.commands);\r\n  }\r\n\r\n  private readonly commands: CommandRegistry;\r\n}\r\n\r\n/**\r\n * Extend the default implementation of a cell footer with custom buttons.\r\n */\r\nexport class CellFooterWithButton extends ReactWidget implements ICellFooter {\r\n  private readonly commands: CommandRegistry;\r\n  private codeVisible: boolean;\r\n  private RUN_ICON = 'fa-solid fa-circle-play';\r\n  private CLEAR_ICON = 'fa-solid fa-circle-xmark';\r\n  private HIDE_ICON = 'fa-solid fa-eye-slash';\r\n  private SHOW_ICON = 'fa-solid fa-eye';\r\n\r\n  constructor(commands: CommandRegistry) {\r\n    super();\r\n    this.addClass(CSS_CLASSES.CELL_FOOTER);\r\n    this.commands = commands;\r\n    this.codeVisible = false;\r\n\r\n    // Add an event listener to the blue bar element\r\n    this.node.addEventListener('click', (event) => {\r\n    // Prevent the default behavior (collapsing/expanding)\r\n      event.preventDefault();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering element');\r\n\r\n    const toggleIcon = this.codeVisible ? this.HIDE_ICON : this.SHOW_ICON;\r\n        \r\n    return React.createElement(\"div\", {className: CSS_CLASSES.CELL_FOOTER_DIV }, \r\n      React.createElement(\"button\",{\r\n          className: CSS_CLASSES.CELL_FOOTER_BUTTON,\r\n          title: \"Click to run this cell\", //tooltip text\r\n          onClick: () => {\r\n            console.log(\"Clicked run cell\");\r\n            this.commands.execute(COMMANDS.RUN_SELECTED_CODECELL);\r\n          },\r\n        },\r\n        React.createElement(\"i\", { className: this.RUN_ICON })\r\n        ),\r\n        React.createElement(\"button\", {\r\n          className: `${CSS_CLASSES.CELL_FOOTER_BUTTON} ${CSS_CLASSES.CELL_TOGGLE_BUTTON}`,\r\n          title: \"Click to hide or show code\", //tooltip text\r\n          onClick: () => {\r\n            console.log(\"Clicked toggle cell visibility\");\r\n            this.codeVisible = !this.codeVisible;\r\n            if (this.codeVisible) {\r\n              this.commands.execute(COMMANDS.SHOW_CELL_CODE);\r\n            } else {\r\n              this.commands.execute(COMMANDS.HIDE_CELL_CODE);\r\n            }\r\n            this.update();\r\n          },\r\n        },\r\n        React.createElement(\"i\", { className: toggleIcon })\r\n        ),\r\n        React.createElement(\"button\", {\r\n          className: CSS_CLASSES.CELL_FOOTER_BUTTON,\r\n          title: \"Click to clear cell output\", //tooltip text\r\n          onClick: () => {\r\n            console.log(\"Clicked clear output\");\r\n            this.commands.execute(COMMANDS.CLEAR_SELECTED_OUTPUT);\r\n          },\r\n        },\r\n        React.createElement(\"i\", { className: this.CLEAR_ICON })\r\n        )\r\n    );\r\n  }\r\n}\r\n\r\n// Define a custom output area\r\nexport class CustomOutputArea extends OutputArea {\r\n  constructor(commands: CommandRegistry) {\r\n    // Create a RenderMimeRegistry instance\r\n    const rendermime = new RenderMimeRegistry();\r\n\r\n    super({\r\n      rendermime, // Use the RenderMimeRegistry instance\r\n      contentFactory: OutputArea.defaultContentFactory,\r\n      model: new OutputAreaModel({ trusted: true }),\r\n    });\r\n    this.addClass(CSS_CLASSES.CUSTOM_OUTPUT_AREA);\r\n  }\r\n}\r\n\r\n/**\r\n * Define a JupyterLab extension to add footer buttons to code cells.\r\n */\r\nconst footerButtonExtension: JupyterFrontEndPlugin<void> = {\r\n  id: 'jupyterlab-aaVisualPolish',\r\n  autoStart: true,\r\n  activate: activateCommands,\r\n  requires: [INotebookTracker]\r\n};\r\n\r\n/**\r\n * Define a JupyterLab extension to override the default notebook cell factory.\r\n */\r\nconst cellFactory: JupyterFrontEndPlugin<NotebookPanel.IContentFactory> = {\r\n  id: 'jupyterlab-aaVisualPolish:factory',\r\n  provides: NotebookPanel.IContentFactory,\r\n  requires: [IEditorServices],\r\n  autoStart: true,\r\n  activate: (app: JupyterFrontEnd, editorServices: IEditorServices) => {\r\n    // tslint:disable-next-line:no-console\r\n    console.log(\r\n      'JupyterLab extension jupyterlab-aaVisualPolish',\r\n      'overrides default nootbook content factory'\r\n    );\r\n\r\n    const { commands } = app;\r\n    const editorFactory = editorServices.factoryService.newInlineEditor;\r\n    return new ContentFactoryWithFooterButton(commands, { editorFactory });\r\n  }\r\n};\r\n\r\n/**\r\n * Export this plugins as default.\r\n */\r\nconst plugins: Array<JupyterFrontEndPlugin<any>> = [\r\n  footerButtonExtension,\r\n  cellFactory\r\n];\r\n\r\nexport default plugins;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.jp-Cell .ccb-cellFooterContainer {\r\n   display: flex;\r\n   flex-direction: row; /* Ensure horizontal alignment */\r\n   justify-content: flex-start; /* Move button to the left */\r\n   align-items: center; /* Vertically center the button */\r\n  }\r\n\r\n  .jp-Cell .ccb-cellFooterBtn {\r\n    color: #fff;\r\n    opacity: 0.7;\r\n    font-size: 0.65rem;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    padding: 4px 8px;\r\n    margin: 0.2rem 0;\r\n    text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.15);\r\n    outline: none;\r\n    cursor: pointer;\r\n    user-select: none;  \r\n    margin-left: 0px;\r\n    margin-right: 4px;\r\n  }\r\n\r\n  .jp-Placeholder-content .jp-PlaceholderText,\r\n  .jp-Placeholder-content .jp-MoreHorizIcon {\r\n    display: none;\r\n  }\r\n\r\n  /* Disable default cell collapsing behavior */\r\n.jp-InputCollapser,\r\n.jp-OutputCollapser,\r\n.jp-Placeholder {\r\n  cursor: auto !important;\r\n  pointer-events: none !important;\r\n}\r\n\r\n  /* Add styles for toggle button */\r\n  .jp-Cell .ccb-toggleBtn{\r\n    background: #f0f0f0;\r\n  }\r\n\r\n  .jp-Cell .ccb-toggleBtn:hover{\r\n    background-color: #ccc;\r\n  }\r\n\r\n  .jp-Cell .ccb-toggleBtn:active{\r\n    background-color: #999;\r\n  }\r\n  \r\n  .jp-Cell .ccb-cellFooterBtn:active {\r\n    background-color: var(--md-blue-600);\r\n    text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.4);\r\n  }\r\n  \r\n  .jp-Cell .ccb-cellFooterBtn:hover {\r\n    background-color: var(--md-blue-500);\r\n    opacity: 1;\r\n    text-shadow: 0px 0px 7px rgba(0, 0, 0, 0.3);\r\n    box-shadow: var(--jp-elevation-z2);\r\n  }\r\n  \r\n  .jp-Cell .ccb-cellFooterBtn {\r\n    background: var(--md-blue-400);\r\n  }\r\n  \r\n  .jp-CodeCell {\r\n    display: flex !important;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .jp-CodeCell .jp-CellFooter {\r\n    height: auto;\r\n    order: 2;\r\n  }\r\n  \r\n  .jp-Cell .jp-Cell-inputWrapper {\r\n    margin-top: 5px;\r\n  }\r\n  \r\n  .jp-CodeCell .jp-Cell-outputWrapper {\r\n    order: 4;\r\n  }\r\n  \r\n  .explanatory-cell {\r\n    width: 50%;\r\n    float: left;\r\n  }`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/index.css\"],\"names\":[],\"mappings\":\"AAAA;GACG,aAAa;GACb,mBAAmB,EAAE,gCAAgC;GACrD,2BAA2B,EAAE,4BAA4B;GACzD,mBAAmB,EAAE,iCAAiC;EACvD;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;IAChB,yBAAyB;IACzB,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;IAChB,4CAA4C;IAC5C,aAAa;IACb,eAAe;IACf,iBAAiB;IACjB,gBAAgB;IAChB,iBAAiB;EACnB;;EAEA;;IAEE,aAAa;EACf;;EAEA,6CAA6C;AAC/C;;;EAGE,uBAAuB;EACvB,+BAA+B;AACjC;;EAEE,iCAAiC;EACjC;IACE,mBAAmB;EACrB;;EAEA;IACE,sBAAsB;EACxB;;EAEA;IACE,sBAAsB;EACxB;;EAEA;IACE,oCAAoC;IACpC,2CAA2C;EAC7C;;EAEA;IACE,oCAAoC;IACpC,UAAU;IACV,2CAA2C;IAC3C,kCAAkC;EACpC;;EAEA;IACE,8BAA8B;EAChC;;EAEA;IACE,wBAAwB;IACxB,sBAAsB;EACxB;;EAEA;IACE,YAAY;IACZ,QAAQ;EACV;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,QAAQ;EACV;;EAEA;IACE,UAAU;IACV,WAAW;EACb\",\"sourcesContent\":[\".jp-Cell .ccb-cellFooterContainer {\\r\\n   display: flex;\\r\\n   flex-direction: row; /* Ensure horizontal alignment */\\r\\n   justify-content: flex-start; /* Move button to the left */\\r\\n   align-items: center; /* Vertically center the button */\\r\\n  }\\r\\n\\r\\n  .jp-Cell .ccb-cellFooterBtn {\\r\\n    color: #fff;\\r\\n    opacity: 0.7;\\r\\n    font-size: 0.65rem;\\r\\n    font-weight: 500;\\r\\n    text-transform: uppercase;\\r\\n    border: none;\\r\\n    padding: 4px 8px;\\r\\n    margin: 0.2rem 0;\\r\\n    text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.15);\\r\\n    outline: none;\\r\\n    cursor: pointer;\\r\\n    user-select: none;  \\r\\n    margin-left: 0px;\\r\\n    margin-right: 4px;\\r\\n  }\\r\\n\\r\\n  .jp-Placeholder-content .jp-PlaceholderText,\\r\\n  .jp-Placeholder-content .jp-MoreHorizIcon {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n  /* Disable default cell collapsing behavior */\\r\\n.jp-InputCollapser,\\r\\n.jp-OutputCollapser,\\r\\n.jp-Placeholder {\\r\\n  cursor: auto !important;\\r\\n  pointer-events: none !important;\\r\\n}\\r\\n\\r\\n  /* Add styles for toggle button */\\r\\n  .jp-Cell .ccb-toggleBtn{\\r\\n    background: #f0f0f0;\\r\\n  }\\r\\n\\r\\n  .jp-Cell .ccb-toggleBtn:hover{\\r\\n    background-color: #ccc;\\r\\n  }\\r\\n\\r\\n  .jp-Cell .ccb-toggleBtn:active{\\r\\n    background-color: #999;\\r\\n  }\\r\\n  \\r\\n  .jp-Cell .ccb-cellFooterBtn:active {\\r\\n    background-color: var(--md-blue-600);\\r\\n    text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.4);\\r\\n  }\\r\\n  \\r\\n  .jp-Cell .ccb-cellFooterBtn:hover {\\r\\n    background-color: var(--md-blue-500);\\r\\n    opacity: 1;\\r\\n    text-shadow: 0px 0px 7px rgba(0, 0, 0, 0.3);\\r\\n    box-shadow: var(--jp-elevation-z2);\\r\\n  }\\r\\n  \\r\\n  .jp-Cell .ccb-cellFooterBtn {\\r\\n    background: var(--md-blue-400);\\r\\n  }\\r\\n  \\r\\n  .jp-CodeCell {\\r\\n    display: flex !important;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .jp-CodeCell .jp-CellFooter {\\r\\n    height: auto;\\r\\n    order: 2;\\r\\n  }\\r\\n  \\r\\n  .jp-Cell .jp-Cell-inputWrapper {\\r\\n    margin-top: 5px;\\r\\n  }\\r\\n  \\r\\n  .jp-CodeCell .jp-Cell-outputWrapper {\\r\\n    order: 4;\\r\\n  }\\r\\n  \\r\\n  .explanatory-cell {\\r\\n    width: 50%;\\r\\n    float: left;\\r\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}