[project]
name = "dbnomics-data-model"
version = "1.0.0beta4"
authors = [{ name = "Christophe Benz", email = "christophe.benz@nomics.world" }]
description = "Provide classes for DBnomics entities and a storage abstraction"
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
  "Operating System :: OS Independent",
]
dependencies = [
  "daiquiri",
  "gitpython",
  "humanfriendly",
  "isoweek",
  "jsonalias",
  "more-itertools",
  "msgspec",
  "orjson",
  "parsy",
  "phantom-types",
  "pysolr",
  "python-dateutil",
  "rich",
  "solrq",
  "typedload",
  "typer[all]",
  "validators",
]

[project.optional-dependencies]
dev = [
  "black",
  "coverage[toml]",
  "mypy",
  "nox",
  "pre-commit",
  "pytest",
  "ruff",
  "types-humanfriendly",
  "types-orjson",
  "types-python-dateutil",
  "vermin",
]

[project.scripts]
dbnomics = "dbnomics_data_model.cli.dbnomics:app"

[project.urls]
"Homepage" = "https://git.nomics.world/dbnomics/dbnomics-data-model"
"Bug Tracker" = "https://git.nomics.world/dbnomics/dbnomics-data-model/-/issues"

[tool.black]
line-length = 120

[tool.coverage.run]
command_line = "-m pytest"

[tool.mypy]
packages = ["dbnomics_data_model", "tests"]
strict = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["isoweek", "parsy", "pysolr.*", "solrq.*", "validators"]

[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = ["dbnomics_data_model", "tests"]

[tool.ruff]
exclude = [
  "__pycache__",
  ".cache",
  ".eggs",
  ".git",
  ".mypy_cache",
  ".nox",
  ".pytest_cache",
  ".venv",
  "*.egg-info",
  "build",
  "dist",
]
ignore = [
  "ANN101",
  "ANN102",
  "ANN401",
  "BLE001",
  "COM",
  "D100",
  "D101",
  "D102",
  "D103",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "N818",
  "PD",
  "PERF203", # Remove when https://github.com/astral-sh/ruff/issues/4789#issuecomment-1635619940 is fixed
  "S101",
  "TD002",
  "TD003",
  "TD004",
]
line-length = 120
select = ["ALL"]
unfixable = ["COM", "ERA", "F841"]
unsafe-fixes = true

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["typer.Argument", "typer.Option"]

[tool.ruff.flake8-builtins]
builtins-ignorelist = ["id", "next", "open"]

[tool.ruff.flake8-quotes]
inline-quotes = "double"

[tool.ruff.isort]
known-first-party = ["dbnomics_data_model"]

[tool.ruff.mccabe]
max-complexity = 11

[tool.ruff.per-file-ignores]
"__init__.py" = ["F403"]
"src/dbnomics_data_model/cli/*.py" = ["FBT001", "FBT003", "UP007"]
"tests/conftest.py" = ["F401", "F403"]
"tests/fixtures.py" = ["F401", "F403"]

[tool.ruff.pylint]
max-args = 13
max-returns = 10
