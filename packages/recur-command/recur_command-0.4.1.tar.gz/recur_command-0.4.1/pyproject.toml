[tool.poetry]
name = "recur-command"
version = "0.4.1"
description = "Retry a command with exponential backoff and jitter."
authors = ["D. Bohdan <dbohdan@dbohdan.com>"]
license = "MIT"
readme = "README.md"
repository = "https://gitlab.com/dbohdan/recur"
keywords = [
  "retry",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3",
  "Topic :: Utilities",
]

include = [
  { path = "LICENSE", format = "sdist" },
  { path = "noxfile.py", format = "sdist" },
  { path = "tests/", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.8"
simpleeval = "^0.9.13"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pyright = "1.1.329"
ruff = "0.1.11"
nox = "2023.4.22"
shiv = "^1.0.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
recur = 'recur_command.main:main'

[tool.poe.env]
"PYTHON_SOURCES" = "noxfile.py src tests"

[tool.poe.tasks.check]
sequence = ["format", "lint", "type"]
help = "Run the formatter, then all static checks"
ignore_fail = "return_non_zero"

[tool.poe.tasks.files]
cmd = "echo ${PYTHON_SOURCES}"
help = "Print the list of packages and files used for static checks"

[tool.poe.tasks.format]
cmd = "ruff format ${PYTHON_SOURCES}"
help = "Run the Ruff formatter"

[tool.poe.tasks.lint]
cmd = "ruff check ${PYTHON_SOURCES}"
help = "Run Ruff"

[tool.poe.tasks.recur]
cmd = "python -m recur_command"
help = "Run recur"

[tool.poe.tasks.test]
cmd = "pytest"
help = "Run Pytest (not through nox)"

[tool.poe.tasks.type]
cmd = "pyright ${PYTHON_SOURCES}"
help = "Run Pyright"

[tool.poe.tasks.zipapp]
cmd = "shiv --console-script recur --output-file recur.pyz ."
help = "Run shiv"

[tool.pyright]
pythonVersion = "3.8"

[tool.ruff]
select = [
  "A",     # flake8-builtins
  "AIR",   # Airflow
  # "ANN", # flake8-annotations
  "ARG",   # flake8-unused-arguments
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "BLE",   # flake8-blind-except
  "C4",    # flake8-comprehensions
  # "C90", # mccabe
  "COM",   # flake8-commas
  # "CPY", # flake8-copyright
  "DJ",    # flake8-django
  # "D",   # pydocstyle
  "DTZ",   # flake8-datetimez
  "EM",    # flake8-errmsg
  "ERA",   # eradicate
  "E",     # pycodestyle
  "EXE",   # flake8-executable
  "FA",    # flake8-future-annotations
  "FBT",   # flake8-boolean-trap
  "FIX",   # flake8-fixme
  "FLY",   # flynt
  "F",     # Pyflakes
  "G",     # flake8-logging-format
  "ICN",   # flake8-import-conventions
  "I",     # isort
  "INP",   # flake8-no-pep420
  "INT",   # flake8-gettext
  "ISC",   # flake8-implicit-str-concat
  "N",     # pep8-naming
  "NPY",   # NumPy-specific rules
  "PD",    # pandas-vet
  "PERF",  # Perflint
  "PGH",   # pygrep-hooks
  "PIE",   # flake8-pie
  "PL",    # Pylint
  "PT",    # flake8-pytest-style
  "PTH",   # flake8-use-pathlib
  "PYI",   # flake8-pyi
  "Q",     # flake8-quotes
  "RET",   # flake8-return
  "RSE",   # flake8-raise
  "RUF",   # Ruff-specific rules
  "S",     # flake8-bandit
  "SIM",   # flake8-simplify
  "SLF",   # flake8-self
  "SLOT",  # flake8-slots
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "TCH",   # flake8-type-checking
  "TD",    # flake8-todos
  "TID",   # flake8-tidy-imports
  "TRY",   # tryceratops
  "UP",    # pyupgrade
  "W",     # pycodestyle
  "YTT",   # flake8-2020
]
ignore = [
  "COM812", # missing-trailing-comma
  "ISC001", # single-line-implicit-string-concatenation
]
target-version = "py38"

[tool.ruff.per-file-ignores]
"src/recur_command/main.py" = [
  "PERF203", # try-except-in-loop
  "S311",    # suspicious-non-cryptographic-random-usage
  "S603",    # subprocess-without-shell-equals-true
  "TRY400",  # error-instead-of-exception
]
"tests/*.py" = [
  "PLR2004", # magic-value-comparison
  "S101",    # assert
  "S603",    # subprocess-without-shell-equals-true
]

[tool.ruff.pylint]
max-args = 8
max-branches = 20
max-statements = 100
