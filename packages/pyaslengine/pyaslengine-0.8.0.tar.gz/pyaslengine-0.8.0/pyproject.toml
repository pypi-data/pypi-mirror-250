[tool.poetry]
name = "pyaslengine"
version = "0.8.0"
description = "Python engine for Amazon States Language (ASL) specification that supports parsing and serialization of definitions, and a local interpreter to run them."
authors = ["Graham Hukill <ghukill@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/ghukill/pyaslengine"

[tool.poetry.dependencies]
python = "^3.11"
attrs = "^23.1.0"
jsonpath-ng = "^1.6.0"
marshmallow = "^3.20.1"
boto3 = "^1.29.6"


[tool.poetry.group.dev.dependencies]
ruff = "^0.1.6"
ipython = "^8.17.2"
mypy = "^1.7.0"
pytest = "^7.4.3"
coverage = "^7.3.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
exclude = ["tests/"]


[tool.pytest.ini_options]
log_level = "INFO"


[tool.ruff]
target-version = "py311"
select = ["ALL", "PT"]
ignore = [
    "ANN101",
    "ANN102",
    "COM812",
    "D107",
    "N812",
    "PTH",
    "C90",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "ISC001",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "S320",
    "S321",
]
fixable = ["E", "F", "I", "Q"]
line-length = 90
show-fixes = true


[tool.ruff.flake8-annotations]
mypy-init-return = true


[tool.ruff.flake8-pytest-style]
fixture-parentheses = false


[tool.ruff.per-file-ignores]
"tests/**/*" = [
    "ANN",
    "ARG001",
    "S101",
]


[tool.ruff.pycodestyle]
max-doc-length = 90


[tool.ruff.pydocstyle]
convention = "google"